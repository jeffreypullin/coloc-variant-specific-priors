---
title: "eQTL-based method comparison"
format: html
editor: source
---

```{r warning = FALSE, message = FALSE}
library(readr)
library(janitor)
library(dplyr)
library(patchwork)
library(tidyr)
library(purrr)
library(stringr)
library(ggplot2)

devtools::load_all("~/coloc")
```

```{r functions}
plot_bfs <- function(bfs, snps, tss = NULL, with_prior = FALSE) {
 
  # Only take the first susie signal.
  bfs <- bfs[1, snps]
  # Assume SNPS are in chr:bp format.
  bps <- vapply(strsplit(snps, ":"), \(x) as.numeric(x[[2]]), numeric(1))
  
  if (!is.null(tss) & with_prior) {
    prior_vec <- 10^-4 * length(bps) * coloc:::calculate_non_uniform_p(bps, tss)
    bfs <- bfs + log(prior_vec)
  }
  
  if (is.null(tss) & with_prior) {
    bfs <- bfs + log(10^-4)
  }
  
  p <- tibble(bf = bfs, bp = bps) |> 
    ggplot(aes(bp, bf)) + 
    geom_point()
  
  if (!is.null(tss)) {
    p <- p + geom_vline(xintercept = tss, colour = "red")
  }
 
  if (with_prior) {
    p <- p + labs(x = "", y = "BF + log(p)")
  } else {
    p <- p + labs(x = "", y = "BF")
  }
   
  p + 
    theme_bw()
}

lookup_tss <- function(trait) {
  gene_id <- unlist(strsplit(trait, ".", fixed = TRUE))[[2]]
  hg38_data |> 
    filter(ensembl_gene_id == gene_id) |> 
    pull(tss)
}

plot_multiple_bfs <- function(trait1, trait2, block, tss1 = NULL, tss2 = NULL) {
  
  bfs1 <-  BF[[block]][[trait1]]
  bfs2 <-  BF[[block]][[trait2]]
  
  snps1 <- colnames(bfs1)
  snps2 <- colnames(bfs2)
  isnps <- intersect(snps1, snps2)
  bps <- vapply(strsplit(isnps, ":"), \(x) as.numeric(x[[2]]), numeric(1))
  
  bfs1 <- bfs1[1, isnps]
  bfs2 <- bfs2[1, isnps]
 
  p <- tibble(bp = bps, !!trait1 := bfs1, !!trait2 := bfs2) |> 
    pivot_longer(cols = -bp, 
                 values_to = "bf", names_to = "trait") |> 
    ggplot(aes(bp, bf, col = trait)) +
    geom_point(alpha = 0.8) +
    labs(
      x = "Position", 
      y = "ABF",
      col = "Trait"
    ) + 
    scale_colour_manual(values = c("#F8766D", "#619CFF")) + 
    theme_bw() + 
    theme(legend.position = "top") + 
    theme(plot.title = element_text(size = 12))
  
  if (!is.null(tss1)) {
    p <- p + geom_vline(xintercept = tss1, colour = "#F8766D")
  }
  
  if (!is.null(tss2)) {
    p <- p + geom_vline(xintercept = tss2, colour = "#619CFF")
  }
 
  coloc_no_tss <- round(coloc.bf_bf(bfs1, bfs2)$summary$PP.H4.abf, 2)
  coloc_tss1 <- round(coloc.bf_bf(bfs1, bfs2, tss1 = tss1)$summary$PP.H4.abf, 2)
  coloc_tss2 <- round(coloc.bf_bf(bfs1, bfs2, tss2 = tss2)$summary$PP.H4.abf, 2)
  coloc_both <- round(coloc.bf_bf(bfs1, bfs2, tss1 = tss1, tss2 = tss2)$summary$PP.H4.abf, 2)
  
  p <- p + ggtitle(paste0("No TSS Pr(H4): ",  coloc_no_tss, ", Trait 1 TSS Pr(H4): ",
                          coloc_tss1, ", Trait 2 TSS Pr(H4): ", coloc_tss2, 
                          ", Both Pr(H4): ", coloc_both))
  
  p
}

plot_priors <- function(trait1, trait2, block, tss1 = NULL, tss2 = NULL) {
  tss1 <- unlist(tss1)
  tss2 <- unlist(tss2)
  
  bfs1 <-  BF[[block]][[trait1]]
  bfs2 <-  BF[[block]][[trait2]]

  snps1 <- colnames(bfs1)
  snps2 <- colnames(bfs2)
  isnps <- intersect(snps1, snps2)
  bps <- vapply(strsplit(isnps, ":"), \(x) as.numeric(x[[2]]), numeric(1))

  Q <- length(bps)
  p1 <- 1e-04
  p2 <- 1e-04
  p12 <- 5e-06
  
  priors <- coloc:::calculate_non_uniform_priors(bps, tss1, tss2, p1, p2, p12)
  p1_vec <- priors$p1_vec
  p2_vec <- priors$p2_vec
  p12_vec <- priors$p12_vec
  
  tibble(bp = bps, p1 = log(p1_vec), p2 = log(p2_vec), p12 = log(p12_vec)) |> 
    pivot_longer(-bp) |> 
    ggplot(aes(bp, value, col = name)) + 
    geom_point() + 
    geom_line() +
    labs(
      x = "Position", 
      col = "Prior"
    ) + 
    theme_bw()
}
```

```{r}
eqtl_method_comparison_data <- readRDS(here::here("output", "data", "eqtl-method-comparison.rds"))
BF <- readRDS(here::here("output", "data", "reduced-bf-list.rds"))
```

```{r}
eqtl_method_comparison_data |>
  mutate(same_gene = tss1 == tss2) |> 
  filter(abs(h4_diff_tss1) >= 0.01) |>  
  ggplot(aes(same_gene, h4_diff_tss1)) + 
  geom_boxplot() + 
  coord_cartesian(ylim = c(-1, 1)) +
  labs(
    y = "Difference in Pr(H4)",
  )
  theme_bw()
```

```{r}
eqtl_method_comparison_data |>
  mutate(same_gene = tss1 == tss2) |> 
  ggplot(aes(same_gene, h4_diff_tss1)) + 
  geom_boxplot() + 
  coord_cartesian(ylim = c(-0.75, 0.75)) + 
  theme_bw()
```

```{r}
eqtl_method_comparison_data |>
  mutate(same_gene = tss1 == tss2) |> 
  ggplot(aes(same_gene, h4_diff_both)) + 
  geom_boxplot() + 
  coord_cartesian(ylim = c(-0.75, 0.75)) + 
  theme_bw()
```

```{r}
eqtl_method_comparison_data |> 
  mutate(same_gene = tss1 == tss2) |> 
  ggplot(aes(h4_unif, h4_non_unif_tss1, col = same_gene)) + 
  geom_point() + 
  geom_abline(col = "grey") + 
  labs(
    x = "H4: Uniform priors", 
    y = "H4: Non-uniform priors (TSS distance prior trait 1)",
    col = "Same gene"
  ) + 
  theme_bw()
```

```{r}
eqtl_method_comparison_data |> 
  mutate(same_gene = tss1 == tss2) |> 
  ggplot(aes(h4_unif, h4_non_unif_both, col = same_gene)) + 
  geom_point() + 
  geom_abline(col = "grey") + 
  labs(
    x = "H4: Uniform priors", 
    y = "H4: Non-uniform priors (TSS distance prior for both traits)",
    col = "Same gene"
  ) + 
  theme_bw()
```

```{r}
eqtl_method_comparison_data |> 
  filter(tss1 == tss2) |> 
  ungroup() |> 
  filter(h4_unif < 0.8, h4_non_unif_tss1 > 0.8) |> 
  slice(3) |> 
  rowwise() |> 
  mutate(plot = list(plot_multiple_bfs(trait1, trait2, block, tss1 = tss1, 
                                       tss2 = tss2))) |> 
  pull(plot)
```  

```{r}
eqtl_method_comparison_data |> 
  ungroup() |> 
  filter(h4_unif > 0.8, h4_non_unif_tss1 < 0.8) |> 
  arrange(desc(h4_diff_tss1)) |> 
  slice(2) |> 
  rowwise() |> 
  mutate(plot = list(plot_multiple_bfs(trait1, trait2, block, tss1 = tss1, 
                                       tss2 = tss2))) |> 
  pull(plot)
```


## Same gene examples

Decrease in Pr(H4) (Trait 1 TSS)

Examples:

Large decrease in Pr(H4) for TSS 1.

```{r}
eqtl_method_comparison_data |> 
  filter(tss1 == tss2) |> 
  ungroup() |> 
  arrange(h4_diff_tss1) |> 
  slice(1) |> 
  rowwise() |> 
  mutate(plot = list(plot_multiple_bfs(trait1, trait2, block, tss1 = tss1, 
                                       tss2 = tss2))) |> 
  pull(plot)

eqtl_method_comparison_data |> 
  filter(tss1 == tss2) |> 
  ungroup() |> 
  arrange(h4_diff_tss1) |> 
  slice(1) |> 
  mutate(plot = list(plot_priors(trait1, trait2, block, tss1, NULL))) |> 
  pull(plot) |> 
  pluck(1) + 
eqtl_method_comparison_data |> 
  filter(tss1 == tss2) |> 
  ungroup() |> 
  arrange(h4_diff_tss1) |> 
  slice(1) |> 
  mutate(plot = list(plot_priors(trait1, trait2, block, tss1, tss2))) |> 
  pull(plot) |> 
  pluck(1) + 
  plot_layout(ncol = 1, guides = "collect")
```

Increase in Pr(H4) (Trait 1 TSS)

Introduction of spurious colocalisation.

```{r}
eqtl_method_comparison_data |> 
  filter(tss1 == tss2) |> 
  ungroup() |> 
  arrange(desc(h4_diff_tss1)) |> 
  slice(2) |> 
  rowwise() |> 
  mutate(plot = list(plot_multiple_bfs(trait1, trait2, block, tss1 = tss1, 
                                       tss2 = tss2))) |> 
  pull(plot)

eqtl_method_comparison_data |> 
  filter(tss1 == tss2) |> 
  ungroup() |> 
  arrange(desc(h4_diff_tss1)) |> 
  slice(1) |> 
  pull(bf1) |> 
  pluck(1) |> 
  dim()
```

```{r}
eqtl_method_comparison_data |> 
  filter(tss1 == tss2) |> 
  ungroup() |> 
  arrange(h4_diff_both) |> 
  slice(1) |> 
  rowwise() |> 
  mutate(plot = list(plot_multiple_bfs(trait1, trait2, block, tss1 = tss1, 
                                       tss2 = tss2))) |> 
  pull(plot)
```

Is this effect just caused by ths TSSs being at the edge of the peak?

## Different gene examples

```{r}
eqtl_method_comparison_data |> 
  filter(tss1 != tss2) |> 
  ungroup() |> 
  arrange(h4_diff_tss1) |> 
  slice(4) |> 
  rowwise() |> 
  mutate(plot = list(plot_multiple_bfs(trait1, trait2, block, tss1 = tss1, 
                                       tss2 = tss2))) |> 
  pull(plot)

eqtl_method_comparison_data |> 
  filter(tss1 != tss2) |> 
  ungroup() |> 
  arrange(h4_diff_tss1) |> 
  slice(4) |> 
  mutate(plot = list(plot_priors(trait1, trait2, block, NULL, tss2))) |> 
  pull(plot)
```

```{r}
eqtl_method_comparison_data |> 
  filter(tss1 != tss2) |> 
  mutate(min_diff = min(abs(h4_diff_tss1), abs(h4_diff_tss2))) |> 
  ggplot(aes(min_diff)) + 
  geom_histogram()
```
