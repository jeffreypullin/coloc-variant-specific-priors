---
title: "eQTL-pQTL colocalisation analysis"
format: html
editor: source
---

```{r warning = FALSE, message = FALSE}
library(readr)
library(locuszoomr)
library(janitor)
library(dplyr)
library(patchwork)
library(tidyr)
library(purrr)
library(stringr)
library(ggplot2)
library(readxl)
library(seqminer)
library(EnsDb.Hsapiens.v75)
library(conflicted)

conflicts_prefer(dplyr::filter)
conflicts_prefer(dplyr::select)
conflicts_prefer(dplyr::setdiff)

devtools::load_all("~/coloc")
```

```{r}
eqtl_data_ids <- c("QTD000110", "QTD000373", "QTD000356")
pqtl_eqtl_colocs <- expand_grid(
  eqtl_data_id = eqtl_data_ids, 
  chr = 1:22
) |>
  rowwise() |>
  mutate(file = paste0("output/data/pqtl-eqtl-coloc-", eqtl_data_id, "-", chr, ".tsv")) |>
  mutate(data = list(read_tsv(file, show_col_types = FALSE))) |>
  unnest(data)

pqtl_eqtl_colocs
```

```{r}
download.file(
  "https://www.biorxiv.org/content/biorxiv/early/2023/09/30/2023.09.29.560109/DC1/embed/media-1.xlsx?download=true", 
  "data/tambets_etal_supp.xlsx"
)
tambets_supp <- read_xlsx("data/tambets_etal_supp.xlsx", sheet = 3)
tambets_supp |> 
  filter(dataset_id == "QTD000110") |>
  arrange(desc(PP.H4.abf)) |>
  select(gene_name, protein, PP.H4.abf)

tambets_supp |>
  filter(gene_name == "IL18R1") |>
  select(gene_name, protein, PP.H4.abf, is_true_positive)

tambets_supp |>
  filter(gene_name == "SIGMAR1") |>
  select(dataset_name, gene_name, protein, PP.H4.abf, is_true_positive)

tambets_supp |>
  filter(gene_name == "FDFT1") |>
  select(dataset_name, gene_name, protein, PP.H4.abf, is_true_positive)
```

```{r}
pqtl_eqtl_colocs |>
  ggplot(aes(PP.H4.abf_unif, PP.H4.abf_non_unif)) + 
  geom_point() + 
  geom_vline(xintercept = 0.8, colour = "red")

pqtl_eqtl_colocs |>
  ggplot(aes(PP.H4.abf_unif, PP.H4.abf_non_unif)) + 
  geom_point() + 
  geom_vline(xintercept = 0.8, colour = "red") + 
  facet_wrap(~eqtl_data_id)
```

```{r}
pqtl_eqtl_colocs |>
  mutate(
    called_coloc_unif = PP.H4.abf_unif >= 0.8,
    called_coloc_non_unif = PP.H4.abf_non_unif >= 0.8
  ) |>
  count(called_coloc_unif, called_coloc_non_unif)

pqtl_eqtl_colocs |>
  mutate(
    called_coloc_unif = PP.H4.abf_unif >= 0.8,
    called_coloc_non_unif = PP.H4.abf_non_unif >= 0.8
  ) |>
  filter(called_coloc_unif != called_coloc_non_unif) |> 
  separate_wider_delim(
    phenotype_id, ".", 
    names = c("protein_name", "protein_other"),
    too_many = "merge",
  ) |>
  select(PP.H4.abf_unif, PP.H4.abf_non_unif, gene_name, protein_name)
  mutate(match = gene_name == protein_name) |>
  summarise(
    unif_precision = sum(called_coloc_unif & match) / n(),
    non_unif_precision = sum(called_coloc_non_unif & match) / n()
  )
```

```{r}
eqtl_data_file <- "data/QTD000110.cc.tsv.gz"
pqtl_data_file <- "data/QTD000584.cc.tsv.gz"
eqtl_metadata_file <- "data/gene_counts_Ensembl_105_phenotype_metadata.tsv.gz"
pqtl_metadata_file <- "data/SomaLogic_Ensembl_96_phenotype_metadata.tsv.gz"

eqtl_metadata <- read_tsv(
  "data/gene_counts_Ensembl_105_phenotype_metadata.tsv.gz", 
  show_col_types = FALSE
)

eqtl_metadata |>
  dplyr::filter(gene_name == "IL18R1") |>
  mutate(tss = if_else(strand == 1, gene_start, gene_end)) |>
  rowwise() |>
  mutate(region = paste0(chromosome, ":", tss - 1e5, "-", tss + 1e5)) |>
  dplyr::select(chromosome, gene_id, region, tss)

eqtl_col_names <- colnames(read_tsv("data/eqtl-catalogue/sumstats/QTD000373.cc.tsv.gz", n_max = 1, 
                           show_col_types = FALSE))
pqtl_col_names <- colnames(read_tsv("data/QTD000584.cc.tsv.gz", n_max = 1, 
                           show_col_types = FALSE))

eqtl_data <- tabix.read.table("data/eqtl-catalogue/sumstats/QTD000373.cc.tsv.gz", 
                              paste0(2, ":1-2147483647")) |>
  as_tibble() |>
  setNames(eqtl_col_names) |>
  filter(molecular_trait_id == "ENSG00000115604") |>
  filter(chromosome == 2) |>
  filter(
    position >= 102211529 &
    position <= 102411529
  ) |>
  select(-rsid) |>
  distinct() |>
  mutate(id = paste(chromosome, position, sep = ":")) |>
  group_by(id) |>
  mutate(row_count = n()) |>
  ungroup() |>
  filter(row_count == 1) |>
  filter(!is.nan(se)) |>
  filter(!is.na(se)) |>
  select(molecular_trait_id, variant, maf, beta, se, an, position) |>
  mutate(
    maf = as.numeric(maf),
    beta = as.numeric(beta),
    se = as.numeric(se),
    an = as.numeric(an)
  )

# FIXME: Why does tabix all then filter differ to tabix filter.
#eqtl_data <- tabix.read.table("data/QTD000110.cc.tsv.gz", "19:41340717-41540717") |>
#  as_tibble() |>
#  setNames(eqtl_col_names) |>
#  filter(molecular_trait_id == "ENSG00000105341") |>
#  select(-rsid) |>
#  distinct() |>
#  mutate(id = paste(chromosome, position, sep = ":")) |>
#  group_by(id) |>
#  mutate(row_count = n()) |>
#  ungroup() |>
#  filter(row_count == 1) |>
#  filter(!is.nan(se)) |>
#  filter(!is.na(se)) |>
#  select(molecular_trait_id, variant, maf, beta, se, an, position) |>
#  mutate(
#    maf = as.numeric(maf),
#    beta = as.numeric(beta),
#    se = as.numeric(se),
#    an = as.numeric(an)
#  )

pqtl_data <- tabix.read.table("data/QTD000584.cc.tsv.gz", paste0(2, ":1-2147483647")) |>
  as_tibble() |>
  setNames(pqtl_col_names) |>
  filter(molecular_trait_id == "IL18R1.14079.14.3..1") |>
  filter(chromosome == 2) |>
  filter(
    position >= 102211529 &
    position <= 102411529
  ) |>
  select(-rsid) |>
  distinct() |>
  mutate(id = paste(chromosome, position, sep = ":")) |>
  group_by(id) |>
  mutate(row_count = n()) |>
  ungroup() |>
  filter(row_count == 1) |>
  filter(!is.nan(se)) |>
  filter(!is.na(se)) |>
  select(molecular_trait_id, variant, maf, beta, se, an, position) |>
  mutate(
    maf = as.numeric(maf),
    beta = as.numeric(beta),
    se = as.numeric(se),
    an = as.numeric(an)
  )

eqtl_data <- eqtl_data |>
  filter(variant %in% pqtl_data$variant)
pqtl_data <- pqtl_data |>
  filter(variant %in% eqtl_data$variant)

eqtl_dataset <- list(
  varbeta = eqtl_data$se^2,
  N = eqtl_data$an * 2,
  MAF = eqtl_data$maf ,
  type = "quant",
  beta = eqtl_data$beta,
  snp = eqtl_data$variant,
  position = eqtl_data$position
)

pqtl_dataset <- list(
  varbeta = pqtl_data$se^2,
  N = pqtl_data$an * 2,
  MAF = pqtl_data$maf ,
  type = "quant",
  beta = pqtl_data$beta,
  snp = pqtl_data$variant,
  position = pqtl_data$position
)

coloc::plot_dataset(eqtl_dataset)
abline(v = 102311529)
coloc::plot_dataset(pqtl_dataset)

coloc::coloc.abf(eqtl_dataset, pqtl_dataset)$summary
coloc::coloc.abf(eqtl_dataset, pqtl_dataset, tss1 = 102311529)$summary

eqtl_data_raw <- tabix.read.table("data/eqtl-catalogue/sumstats/QTD000373.cc.tsv.gz", 
                                  paste0(2, ":1-2147483647")) |>
  as_tibble() |>
  setNames(eqtl_col_names) |>
  dplyr::rename(
    chrom = chromosome,
    pos = position,
    p = pvalue
  ) |>
  as.data.frame()

loc <- locus(data = eqtl_data_raw, 
             xrange = c(102211529, 102411529),
             seqname = 2,
             ens_db = "EnsDb.Hsapiens.v75")

loc <- locus(data = eqtl_data_raw, gene = "IL18R1",
             ens_db = "EnsDb.Hsapiens.v75")
locus_plot(loc)
```
