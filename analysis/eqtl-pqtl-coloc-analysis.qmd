---
title: "eQTL-pQTL colocalisation analysis"
format: html
editor: source
---

```{r warning = FALSE, message = FALSE}
library(readr)
library(janitor)
library(dplyr)
library(patchwork)
library(tidyr)
library(purrr)
library(stringr)
library(ggplot2)
library(readxl)
library(seqminer)
library(conflicted)

conflicts_prefer(dplyr::filter)
conflicts_prefer(dplyr::select)
conflicts_prefer(dplyr::setdiff)
conflicts_prefer(dplyr::rename)
conflicts_prefer(dplyr::intersect)

devtools::load_all("~/coloc")
```

```{r load-data}
# Load eQTL-pQTL colocalisation results.
eqtl_data_ids <- c("QTD000110", "QTD000373", "QTD000356")
pqtl_eqtl_colocs <- expand_grid(
  eqtl_data_id = eqtl_data_ids, 
  chr = 1:22
) |>
  rowwise() |>
  mutate(file = paste0("output/data/pqtl-eqtl-coloc-", eqtl_data_id, "-", chr, ".rds")) |>
  mutate(data = list(read_rds(file))) |>
  unnest(data)

cs_data <- read_tsv("data/QTD000584.credible_sets.tsv.gz", show_col_types = FALSE) |>
  select(phenotype_id = molecular_trait_id, coding_gene_id = gene_id) |>
  distinct(phenotype_id, coding_gene_id)

tambets_supp <- read_xlsx("data/tambets-etal-supp.xlsx", sheet = 3)

protein_metadata <- read_tsv("data/metadata/SomaLogic_Ensembl_96_phenotype_metadata.tsv.gz", 
                             show_col_types = FALSE)
```

```{r}
pos_data <- pqtl_eqtl_colocs |>
  select(tss, PP.H4.abf_unif, unif_result) |>
  rowwise() |>
  mutate(
    z1 = list(unif_result$z.df1), 
    z2 = list(unif_result$z.df2),
    rel = list(unif_result$position - tss)
  ) |>
  unnest(c(rel, z1, z2)) |>
  mutate(
    both_sig = abs(z1) > 5.6 & abs(z2) > 5.6,
    either_sig = abs(z1) > 5.6 | abs(z2) > 5.6
  )


  mutate(rel = list(positions - tss)) |>
  mutate(sig_coloc = PP.H4.abf_unif > 0.8) |>
  unnest(c(rel)) |>
  ggplot(aes(rel)) + 
  geom_histogram(binwidth = 100)
```

```{r}
pqtl_eqtl_colocs |>
  filter(phenotype_id == "PDCD1LG2.3004.67.2..1") |>
  select(gene_name, phenotype_id, PP.H4.abf_unif, 
         PP.H4.abf_eqtl_tss_eqtlgen)

pqtl_eqtl_colocs |>
  mutate(
    unif_sig = PP.H4.abf_unif > 0.8,
    eqtl_tss_sig = PP.H4.abf_eqtl_tss_eqtlgen > 0.8
  ) |>
  filter(unif_sig != eqtl_tss_sig) |>
  select(gene_name, phenotype_id, PP.H4.abf_unif, PP.H4.abf_eqtl_tss_eqtlgen)

left_join(
  pqtl_eqtl_colocs |>
    select(eqtl_data_id, starts_with("PP.H4.abf"), phenotype_id, 
           coloc_gene_id = gene_id), 
  protein_metadata |>
    select(coding_gene_id = gene_id, phenotype_id),
  by = "phenotype_id"
) |>
  rename(protein_id = phenotype_id) |>
  pivot_longer(-c(protein_id, coding_gene_id, eqtl_data_id, coloc_gene_id),
               values_to = "pp_h4", 
               names_to = c("junk", "prior_type"),
               names_pattern = "(.*?)_(.*)") |>
  select(-junk) |>
  mutate(sig_coloc = pp_h4 >= 0.8) |>
  mutate(gene_match = coding_gene_id == coloc_gene_id) |>
  filter(prior_type %in% c("unif", "pqtl_tss_eqtlgen")) |>
  summarise(
    colocalised = any(sig_coloc), 
    is_tp = any(sig_coloc & gene_match),
    is_fn = !any(sig_coloc & gene_match),
    is_fp = any(sig_coloc) & !any(sig_coloc & gene_match),
    .by = c(protein_id, prior_type)
  ) |>
  select(protein_id, prior_type, colocalised) |>
  pivot_wider(names_from = prior_type, values_from = colocalised) |>
  filter(unif != pqtl_tss_eqtlgen)
```

```{r call-level-performance}
left_join(
  pqtl_eqtl_colocs |>
    select(eqtl_data_id, starts_with("PP.H4.abf"), phenotype_id, 
           coloc_gene_id = gene_id), 
  protein_metadata |>
    select(coding_gene_id = gene_id, phenotype_id),
  by = "phenotype_id"
) |>
  rename(protein_id = phenotype_id) |>
  pivot_longer(-c(protein_id, coding_gene_id, eqtl_data_id, coloc_gene_id),
               values_to = "pp_h4", 
               names_to = c("junk", "prior_type"),
               names_pattern = "(.*?)_(.*)") |>
  select(-junk) |>
  mutate(sig_coloc = pp_h4 >= 0.8) |>
  mutate(gene_match = coding_gene_id == coloc_gene_id) |>
  summarise(
    colocalised = any(sig_coloc), 
    is_tp = any(sig_coloc & gene_match),
    is_fn = !any(sig_coloc & gene_match),
    is_fp = any(sig_coloc) & !any(sig_coloc & gene_match),
    .by = c(protein_id, prior_type, eqtl_data_id)
  ) |>
  summarise(
    n_colocalised = sum(colocalised),
    n_tp = sum(is_tp),
    n_fn = sum(is_fn),
    n_fp = sum(is_fp),
    .by = prior_type
  ) |>
  mutate(
    recall = n_tp / (n_tp + n_fn), 
    precision = n_tp / (n_tp + n_fp)
  )
```

```{r protein-level-performance}
left_join(
  pqtl_eqtl_colocs |>
    select(eqtl_data_id, starts_with("PP.H4.abf"), phenotype_id, 
           coloc_gene_id = gene_id), 
  protein_metadata |>
    select(coding_gene_id = gene_id, phenotype_id),
  by = "phenotype_id"
) |>
  rename(protein_id = phenotype_id) |>
  pivot_longer(-c(protein_id, coding_gene_id, eqtl_data_id, coloc_gene_id),
               values_to = "pp_h4", 
               names_to = c("junk", "prior_type"),
               names_pattern = "(.*?)_(.*)") |>
  select(-junk) |>
  mutate(sig_coloc = pp_h4 >= 0.8) |>
  mutate(gene_match = coding_gene_id == coloc_gene_id) |>
  summarise(
    colocalised = any(sig_coloc), 
    is_tp = any(sig_coloc & gene_match),
    is_fn = !any(sig_coloc & gene_match),
    is_fp = any(sig_coloc) & !any(sig_coloc & gene_match),
    .by = c(protein_id, prior_type)
  ) |>
  summarise(
    n_colocalised = sum(colocalised),
    n_tp = sum(is_tp),
    n_fn = sum(is_fn),
    n_fp = sum(is_fp),
    .by = prior_type
  ) |>
  mutate(
    recall = n_tp / (n_tp + n_fn), 
    precision = n_tp / (n_tp + n_fp)
  )
```

```{r}
pqtl_eqtl_colocs |>
  ggplot(aes(PP.H4.abf_unif, PP.H4.abf_eqtl_tss_eqtlgen)) + 
  geom_point() + 
  geom_vline(xintercept = 0.8, colour = "red") + 
  geom_hline(yintercept = 0.8, colour = "red") + 
  theme_bw()

pqtl_eqtl_colocs |>
  ggplot(aes(PP.H4.abf_unif, PP.H4.abf_gnocchi)) + 
  geom_point() + 
  geom_vline(xintercept = 0.8, colour = "red") + 
  geom_hline(yintercept = 0.8, colour = "red") + 
  theme_bw()

pqtl_eqtl_colocs |>
  ggplot(aes(PP.H4.abf_unif, PP.H4.abf_pqtl_tss)) + 
  geom_point() + 
  geom_vline(xintercept = 0.8, colour = "red") + 
  geom_hline(yintercept = 0.8, colour = "red") + 
  theme_bw()

pqtl_eqtl_colocs |>
  ggplot(aes(PP.H4.abf_unif, PP.H4.abf_gnocchi)) + 
  geom_point() + 
  geom_vline(xintercept = 0.8, colour = "red") + 
  geom_hline(yintercept = 0.8, colour = "red") + 
  theme_bw()
```

```{r pqtl-tss}
pqtl_eqtl_colocs |>
  mutate(
    called_coloc_unif = PP.H4.abf_unif >= 0.8,
    called_coloc_non_unif = PP.H4.abf_pqtl_tss >= 0.8
  ) |>
  count(called_coloc_unif, called_coloc_non_unif)

pqtl_eqtl_colocs |>
  mutate(
    called_coloc_unif = PP.H4.abf_unif >= 0.8,
    called_coloc_non_unif = PP.H4.abf_pqtl_tss >= 0.8
  ) |>
  filter(called_coloc_unif != called_coloc_non_unif) |> 
  separate_wider_delim(
    phenotype_id, ".", 
    names = c("protein_name", "protein_other"),
    too_many = "merge",
  ) |>
  select(eqtl_data_id, PP.H4.abf_unif, PP.H4.abf_pqtl_tss, gene_name, protein_name)
  mutate(match = gene_name == protein_name) |>
  summarise(
    unif_precision = sum(called_coloc_unif & match) / n(),
    non_unif_precision = sum(called_coloc_non_unif & match) / n()
  )
```

```{r score-non-unif}
pqtl_eqtl_colocs |>
  ggplot(aes(PP.H4.abf_unif, PP.H4.abf_score)) + 
  geom_point() + 
  geom_vline(xintercept = 0.8, colour = "red")

pqtl_eqtl_colocs |>
  mutate(
    called_coloc_unif = PP.H4.abf_unif >= 0.8,
    called_coloc_non_unif = PP.H4.abf_score >= 0.8
  ) |>
  count(called_coloc_unif, called_coloc_non_unif)
```

```{r}
eqtl_data_file <- "data/QTD000110.cc.tsv.gz"
pqtl_data_file <- "data/QTD000584.cc.tsv.gz"
eqtl_metadata_file <- "data/metadata/gene_counts_Ensembl_105_phenotype_metadata.tsv.gz"
pqtl_metadata_file <- "data/metadata/SomaLogic_Ensembl_96_phenotype_metadata.tsv.gz"

eqtl_metadata <- read_tsv(eqtl_metadata_file, show_col_types = FALSE)

eqtl_metadata |>
  filter(gene_id == "ENSG00000124588") |>
  mutate(tss = if_else(strand == 1, gene_start, gene_end)) |>
  rowwise() |>
  mutate(region = paste0(chromosome, ":", tss - 1e5, "-", tss + 1e5)) |>
  dplyr::select(chromosome, gene_id, region, tss)

eqtl_col_names <- colnames(read_tsv("data/eqtl-catalogue/sumstats/QTD000373.cc.tsv.gz", n_max = 1, 
                           show_col_types = FALSE))
pqtl_col_names <- colnames(read_tsv("data/QTD000584.cc.tsv.gz", n_max = 1, 
                           show_col_types = FALSE))

eqtl_data <- tabix.read.table("data/eqtl-catalogue/sumstats/QTD000373.cc.tsv.gz", 
                              paste0(6, ":1-2147483647")) |>
  as_tibble() |>
  setNames(eqtl_col_names) |>
  filter(molecular_trait_id == "ENSG00000124588") |>
  filter(chromosome == 6) |>
  filter(
    position >= 2887987 &
    position <= 3087987
  ) |>
  select(-rsid) |>
  distinct() |>
  mutate(id = paste(chromosome, position, sep = ":")) |>
  group_by(id) |>
  mutate(row_count = n()) |>
  ungroup() |>
  filter(row_count == 1) |>
  filter(!is.nan(se)) |>
  filter(!is.na(se)) |>
  select(molecular_trait_id, variant, maf, beta, se, an, position) |>
  mutate(
    maf = as.numeric(maf),
    beta = as.numeric(beta),
    se = as.numeric(se),
    an = as.numeric(an)
  )

# FIXME: Why does tabix all then filter differ to tabix filter.
pqtl_data <- tabix.read.table("data/QTD000584.cc.tsv.gz", paste0(6, ":1-2147483647")) |>
  as_tibble() |>
  setNames(pqtl_col_names) |>
  filter(molecular_trait_id == "NQO2.9754.33.3..1") |>
  filter(chromosome == 6) |>
  filter(
    position >= 2887987 &
    position <= 3087987
  ) |>
  select(-rsid) |>
  distinct() |>
  mutate(id = paste(chromosome, position, sep = ":")) |>
  group_by(id) |>
  mutate(row_count = n()) |>
  ungroup() |>
  filter(row_count == 1) |>
  filter(!is.nan(se)) |>
  filter(!is.na(se)) |>
  select(molecular_trait_id, variant, maf, beta, se, an, position) |>
  mutate(
    maf = as.numeric(maf),
    beta = as.numeric(beta),
    se = as.numeric(se),
    an = as.numeric(an)
  )

eqtl_data <- eqtl_data |>
  filter(variant %in% pqtl_data$variant)
pqtl_data <- pqtl_data |>
  filter(variant %in% eqtl_data$variant)

eqtl_dataset <- list(
  varbeta = eqtl_data$se^2,
  N = eqtl_data$an * 2,
  MAF = eqtl_data$maf ,
  type = "quant",
  beta = eqtl_data$beta,
  snp = eqtl_data$variant,
  position = eqtl_data$position
)

pqtl_dataset <- list(
  varbeta = pqtl_data$se^2,
  N = pqtl_data$an * 2,
  MAF = pqtl_data$maf ,
  type = "quant",
  beta = pqtl_data$beta,
  snp = pqtl_data$variant,
  position = pqtl_data$position
)

coloc::plot_dataset(eqtl_dataset)
coloc::plot_dataset(pqtl_dataset)

eqtlgen_density_data <- read_rds("output/densities/eqtlgen.rds")
eqtl_prior_weights_eqtlgen <- compute_eqtl_tss_dist_prior_weights(
  eqtl_dataset$pos, 2987987, eqtlgen_density_data
)

test <- coloc.abf(eqtl_dataset, pqtl_dataset)
p1 <- 1e-4
p2 <- 1e-4
p12 <- 1e-5
l1 <- test$result$lABF.df1
l2 <- test$result$lABF.df2
prior_weights1 <- NULL
prior_weights2 <- eqtl_prior_weights_eqtlgen

suppressWarnings(coloc.abf(eqtl_dataset, pqtl_dataset)$summary)
suppressWarnings(coloc.abf(eqtl_dataset, pqtl_dataset, 
                 prior_weights2 = eqtl_prior_weights_eqtlgen)$summary)
```
