---
title: "Simulation analysis"
format: html
editor: source
---

```{r warning = FALSE, message = FALSE}
renv::load(here::here())

library(dplyr)
library(readr)
library(ggplot2)
library(glue)
library(yaml)

devtools::load_all("~/coloc")
```

```{r load-data}
config <- read_yaml(here::here("config.yaml"))
simulation_genes <- config$simulation_genes
simulation_data <- lapply(simulation_genes, function(x) {
  here::here(glue("output/data/sim-result-{x}.rds")) |>
  read_rds() |>
  mutate(locus = x)
}) |>
  bind_rows()
```

```{r}
simulation_data |>
  mutate(
    fp = hyp == "h3" & pp_h4 >= 0.8,
    tp = hyp == "h4" & pp_h4 >= 0.8,
    fn = hyp == "h4" & pp_h4 < 0.8
  ) |>
  summarise(
    n_tp = sum(tp),
    n_fn = sum(fn), 
    n_fp = sum(fp),
    .by = c(prior, locus), 
  ) |>
  mutate(
    recall = n_tp / (n_tp + n_fn),
    precision = n_tp / (n_tp + n_fp)
  )
```

```{r}
simulation_data |>
  ggplot(aes(hyp, pp_h4, fill = prior)) + 
  geom_boxplot(position = "dodge") + 
  geom_hline(yintercept = 0.8, linetype = "dashed") +
  theme_bw() + 
  labs(
    x = "True hypothesis", 
    y = "Mean Pr(H4)",
    fill = "Prior type"
  )
```

```{r}
simulation_data |>
  ggplot(aes(hyp, pp_h4, fill = prior)) +
  geom_boxplot(position = "dodge") +
  geom_hline(yintercept = 0.8, linetype = "dashed") +
  theme_bw() +
  labs(
    x = "True hypothesis",
    y = "Pr(H4)",
    fill = "Prior type"
  ) +
  facet_wrap(~locus)
```

```{r}
prior_weights <- list()
pos <- list()
gene <- list()
for (i in seq_along(simulation_genes)) {
  file <- glue(here::here("data/{simulation_genes[[i]]}.vcf.gz.impute.legend"))
  legend <- read_delim(file, show_col_types = FALSE) 
  pos[[i]] <- legend$pos
  prior_weights[[i]] <- compute_eqtl_tss_dist_prior_weights(
    pos[[i]],
    round(median(pos[[i]]), 0),
    read_rds(here::here("output/densities/eqtlgen.rds"))
  )
  gene[[i]] <- rep(simulation_genes[[i]], length(pos[[i]]))
}

tibble(
  gene = unlist(gene),
  pos = unlist(pos),
  prior_weight = unlist(prior_weights)
) |> 
  ggplot(aes(pos, prior_weight)) + 
  geom_point() + 
  facet_wrap(~ gene, scales = "free_x") + 
  labs(
    x = "Position",
    y = "Prior weight"
  ) + 
  theme_bw() 
```
