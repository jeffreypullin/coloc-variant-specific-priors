[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "eQTL TSS analysis\nMethod testing"
  },
  {
    "objectID": "method-testing.html",
    "href": "method-testing.html",
    "title": "Method testing",
    "section": "",
    "text": "library(readr)\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(patchwork)\nlibrary(tidyr)\n\n\nhg38_data &lt;- readRDS(\"/home/jp2045/coloc-estimated-eqtl-priors/data/tss-data/hg38-tss-data.rds\")\n\n\nplot_bfs &lt;- function(bfs, snps, tss = NULL, with_prior = FALSE) {\n \n  # Only take the first susie signal.\n  bfs &lt;- bfs[1, snps]\n  # Assume SNPS are in chr:bp format.\n  bps &lt;- vapply(strsplit(snps, \":\"), \\(x) as.numeric(x[[2]]), numeric(1))\n  \n  if (!is.null(tss) & with_prior) {\n    prior_vec &lt;- 10^-4 * length(bps) * coloc:::calculate_non_uniform_p(bps, tss)\n    bfs &lt;- bfs + log(prior_vec)\n  }\n  \n  p &lt;- tibble(bf = bfs, bp = bps) |&gt; \n    ggplot(aes(bp, bf)) + \n    geom_point()\n  \n  if (!is.null(tss)) {\n    p &lt;- p + geom_vline(xintercept = tss, colour = \"red\")\n  }\n  \n  p + \n    labs(x = \"\", y = \"BF\") + \n    theme_bw()\n}\n\nlookup_tss &lt;- function(trait) {\n  gene_id &lt;- unlist(strsplit(trait, \".\", fixed = TRUE))[[2]]\n  hg38_data |&gt; \n    filter(ensembl_gene_id == gene_id) |&gt; \n    pull(tss)\n}\n\n\nload(\"/rds/project/cew54/rds-cew54-basis/People/CHRIS/colocs_for_jeffrey.RData\")\ndevtools::load_all(\"~/coloc\")\n\nâ„¹ Loading coloc\nThis is coloc version 6.0.0\n\n# 27 rows have 'too small overlap' warnings.\nmethod_comparison_data &lt;- COLOC |&gt; \n  # The BLUEPRINT Bayes factors are empty.\n  filter(!(substr(trait1, 1, 9) == \"BLUEPRINT\" | substr(trait2, 1, 9) == \"BLUEPRINT\")) |&gt; \n  as_tibble() |&gt; \n  mutate(\n    gene1 = grepl(\"ENSG\", trait1, fixed = TRUE),\n    gene2 = grepl(\"ENSG\", trait2, fixed = TRUE)\n  ) |&gt; \n  filter(gene1 | gene2) |&gt; \n  rowwise() |&gt; \n  # Assume that only 1 trait is an expression trait.\n  mutate(tss = ifelse(gene1, lookup_tss(trait1), lookup_tss(trait2))) |&gt; \n  select(trait1, trait2, block, tss, gene1) |&gt;\n  mutate(coloc_unif = list(coloc.bf_bf(BF[[block]][[trait1]], BF[[block]][[trait2]]))) |&gt; \n  mutate(coloc_non_unif = ifelse(\n    gene1, \n    list(coloc.bf_bf(BF[[block]][[trait1]], BF[[block]][[trait2]], tss1 = tss)), \n    list(coloc.bf_bf(BF[[block]][[trait1]], BF[[block]][[trait2]], tss2 = tss))\n  )) |&gt; \n  rowwise() |&gt; \n  mutate(h4_unif = list(coloc_unif$summary$PP.H4.abf)) |&gt; \n  mutate(h4_non_unif = list(coloc_non_unif$summary$PP.H4.abf)) |&gt; \n  filter(!any(is.na(h4_unif))) |&gt; \n  filter(!any(is.na(h4_non_unif)))\n\n[1]  0.000000  3.436044 14.618498 18.052445 18.101204\n[1]  0.000000  1.948767 33.915430 35.863319 35.041244\n[1]  0.000000  4.581298 13.373412 17.943260 19.693805\n[1]  0.000000  4.534226 38.839260 43.371160 43.523088\n[1]  0.000000  5.653502 38.839260 44.482378 46.134734\n[1]  0.000000  2.090469 38.839260 40.929726 34.625374\n[1]  0.000000  4.576136 11.512717 16.084663 16.826224\n[1]  0.000000  5.665359 11.512717 17.177507 15.920879\n[1]  0.000000  2.089753 11.512717 13.602468  7.040921\n[1]  0.000000  4.576136 66.647669 71.219182 72.059311\n[1]  0.000000  5.665359 66.647669 72.299968 74.182946\n[1]  0.000000  2.089753 66.647669 68.737419 62.468731\n[1]  0.000000  4.585888 26.157696 30.741967 30.529796\n[1]  0.000000  5.670456 26.157696 31.819625 33.273889\n[1]  0.000000  2.089752 26.157696 28.247444 21.909308\n[1]  0.000000  4.585888 32.275794 36.859908 36.741119\n[1]  0.000000  5.670456 32.275794 37.938613 39.282237\n[1]  0.000000  2.089752 32.275794 34.365543 28.011129\n[1]  0.000000  4.585888 56.482535 61.066785 60.867738\n[1]  0.000000  5.670456 56.482535 62.144306 63.617074\n[1]  0.000000  2.089752 56.482535 58.572283 52.239666\n[1]  0.000000  4.585888 44.978121 49.562462 49.305916\n[1]  0.000000  5.670456 44.978121 50.639401 52.167423\n[1]  0.000000  2.089752 44.978121 47.067870 40.743809\n[1]  0.000000  4.585888 43.545580 48.129840 47.924947\n[1]  0.000000  5.670456 43.545580 49.207388 50.675952\n[1]  0.000000  2.089752 43.545580 45.635329 39.300970\n[1]  0.00000  4.58061 25.96191 30.53420 31.96407\n[1]  0.000000  5.670445 25.961909 31.627649 32.485262\n[1]  0.000000  2.089875 25.961909 28.051780 21.642525\n[1]  0.00000  4.58061 40.84318 45.42166 45.48376\n[1]  0.000000  5.670445 40.843177 46.503575 48.122720\n[1]  0.000000  2.089875 40.843177 42.933048 36.638438\n[1]  0.000000  4.581065 18.917174 23.495018 23.972972\n[1]  0.000000  5.670445 18.917174 24.575298 26.399599\n[1]  0.00000  2.08993 18.91717 21.00710 14.71222\n[1]   0.00000  85.78974  17.33510 103.10833 105.22734\n[1]  0.00000 65.64934 17.33510 82.97869 84.03762\n[1]  0.00000 20.44418 13.87903 34.32243 33.38077\n[1]  0.00000 14.52816 13.87903 28.37511 31.16624\n[1]  0.00000 13.85114 12.03247 25.88282 24.95174\n[1]  0.00000 13.87903 10.81715 24.65804 27.62512\n[1]  0.00000 13.87903 13.84474 27.69015 30.52867\n[1]  0.000000  6.656625  5.410223 12.032952 14.880082\n[1]  0.00000 27.11649  5.41031 32.51725 34.08552\n[1]  0.00000 47.69470  5.41031 53.09577 54.63074\n[1]  0.000000 48.564693  5.410344 51.179220 60.126635\n[1]  0.000000 30.263209  5.410259 35.661165 37.484005\n[1]  0.000000 20.206809  5.410317 25.607729 27.159641\n[1]  0.000000 16.661253  5.410317 22.060519 23.775466\n[1]  0.000000  3.585473  6.656625 10.209938 13.003661\n[1]  0.000000 23.438381  6.656625 30.093285 29.944198\n[1]  0.000000  6.275950  6.656625 12.932575  3.469234\n[1]  0.000000  3.585674 27.116489 30.688078 32.647064\n[1]  0.00000 23.43838 27.11649 50.20474 55.55006\n[1]  0.000000  6.276006 27.116489 33.392494 22.445290\n[1]  0.000000  3.585674 47.694696 51.264974 53.313658\n[1]  0.00000 23.43838 47.69470 70.73193 76.24038\n[1]  0.000000  6.276006 47.694696 53.970702 43.022315\n[1]  0.000000  3.585938 48.564693 49.458149 58.295125\n[1]  0.00000 23.43838 48.56469 72.00246 70.82233\n[1]  0.000000  6.242429 48.564693 54.807122 44.156110\n[1]  0.000000  3.585592 30.263209 33.841008 35.204956\n[1]  0.00000 23.43838 30.26321 53.58752 57.68878\n[1]  0.000000  6.237921 30.263209 36.501130 25.598680\n[1]  0.000000  3.585897 20.206809 23.779484 25.674791\n[1]  0.00000 23.43838 20.20681 43.33338 48.54259\n[1]  0.000000  6.275974 20.206809 26.482783 15.536359\n[1]  0.000000  3.585897 16.661253 20.239108 21.634687\n[1]  0.00000 23.43838 16.66125 39.94971 44.34257\n[1]  0.000000  6.275974 16.661253 22.937227 11.995675\n[1]  0.000000  9.511969  1.948924 11.460172 10.440524\n[1] 0.000000 7.625481 1.950405 9.575008 8.751891\n[1]  0.000000 10.448452  1.952637 12.399486 12.178829\n[1] 0.000000 2.134556 5.128081 7.261257 6.891083\n[1]  0.000000  5.430767  5.128080 10.523975 13.399991\n[1]   0.00000 262.64774  11.78125 274.42899 258.81276\n[1]   0.00000 288.87042  11.78125 300.65166 285.04695\n[1]  0.000000  1.772766 38.676334 40.448602 39.058987\n[1]  0.00000 20.44549 12.30459 32.60123 36.98630\n[1]  0.00000 13.53074 12.30459 25.81842 27.96183\n[1]  0.00000 25.77206 12.30459 37.96282 42.06182\n[1]  0.00000 48.18737 12.30459 60.34408 64.72216\n[1]  0.00000 30.95916 12.30458 42.99047 48.04753\n[1]  0.00000 34.01796 11.98339 45.96709 48.82511\n[1]  0.00000 82.15284 12.30459 94.30581 98.71081\n[1]  0.00000 29.92351 12.30459 42.07758 46.47470\n[1]  0.00000 13.87410 12.30459 26.06888 30.12991\n[1]   0.00000 102.03301  12.30457 114.33625 113.92926\n[1]  0.00000 21.95552 12.30457 34.25893 33.71790\n[1]  0.00000 66.47205 12.30457 78.62403 83.03589\n[1]   0.00000 116.56839  12.30457 128.86850 129.67261\n[1]  0.00000 41.74225 12.30457 54.04600 53.14959\n[1]  0.00000 23.75674 12.30457 36.06050 35.15218\n[1]  0.00000 66.65893 12.30457 78.81442 83.20120\n[1]  0.00000 37.83097 12.30457 50.13411 49.79223\n[1]  0.00000 16.07581 12.30457 28.37891 28.06407\n[1]  0.00000 15.18643 12.30459 27.40385 31.22242\n[1]  0.000000 12.304587  9.433516 21.638018 25.601354\n[1]  0.00000 29.31519 12.90712 42.22193 40.55781\n[1]  0.000000  7.706806 29.305879 36.996507 39.095174\n[1]  0.000000 29.305879  8.268131 37.550844 40.012008\n[1]  0.00000 29.30588 13.56698 42.85229 45.19321\n[1]  0.00000 69.80057 15.74253 85.53489 86.95150\n[1]  0.000000  6.616972  7.458660 14.063148 15.900677\n[1]  0.000000  6.155098  7.458660 13.603392 15.253903\n[1]  0.000000  6.616988 21.459799 28.032425 31.153914\n[1]  0.00000  6.15509 21.45980 27.56130 30.87635\n[1]  0.000000  6.551703  7.929663 14.443857 17.394093\n[1]  0.000000  6.142046  7.929663 14.019881 17.300691\n[1]  0.000000  6.619704 15.315854 21.894915 24.927000\n[1]  0.000000  6.154176 15.315854 21.429213 24.465634\n[1]  0.000000  6.616978 25.703093 32.283857 35.198318\n[1]  0.000000  6.152852 25.703093 31.801376 35.135101\n[1]  0.000000  6.616978 16.760690 23.342056 26.239431\n[1]  0.000000  6.152852 16.760690 22.860014 26.173954\n[1]  0.000000  6.616978 62.190537 68.771800 71.672124\n[1]  0.000000  6.152852 62.190537 68.288151 71.634406\n[1]  0.000000  6.616858 21.587134 28.165462 31.143083\n[1]  0.00000  6.15520 21.58713 27.70715 30.59215\n[1]  0.000000  6.616858 35.345493 41.924228 44.891039\n[1]  0.00000  6.15520 35.34549 41.43963 44.88915\n[1]  0.000000  6.616858 18.157833 24.741012 27.581637\n[1]  0.00000  6.15520 18.15783 24.26002 27.56402\n[1]  0.000000 41.663081  5.982885 47.629744 49.731047\n[1]  0.000000  5.982853 17.151629 23.121572 24.992879\n[1]  0.000000 16.193106  3.858079 20.050281 19.256493\n[1]  0.000000 13.997900  4.187695 18.178626 19.430372\n[1]  0.000000 29.960673  4.188022 34.145784 34.522799\n[1]  0.000000  9.776530  4.186475 13.936257 16.542983\n[1]  0.000000 11.441619  4.188255 15.612658 17.774020\n[1]   0.000000 122.247760   4.184851 126.424262 127.857441\n[1]   0.000000 110.403686   4.117562 114.489452 117.271599\n[1]  0.000000 26.983986  4.188002 31.154974 33.304408\n[1]  0.000000 13.593478  4.188002 17.760134 20.138576\n\n\nWarning: There were 27 warnings in `mutate()`.\nThe first warning was:\nâ„¹ In argument: `coloc_unif = list(coloc.bf_bf(BF[[block]][[trait1]],\n  BF[[block]][[trait2]]))`.\nâ„¹ In row 1.\nCaused by warning in `coloc.bf_bf()`:\n! snp overlap too small between datasets: too few snps with high posterior in one trait represented in other\nâ„¹ Run `dplyr::last_dplyr_warnings()` to see the 26 remaining warnings.\n\n\n[1]  0.000000  3.436044 16.704686 20.138458 20.267333\n[1]  0.000000  1.948767 32.753253 34.701120 33.902787\n[1]  0.000000  4.581298 12.687252 17.258105 18.916297\n[1]  0.000000  4.534226 37.483043 42.014453 42.357809\n[1]  0.000000  5.653502 37.483838 43.125773 44.886627\n[1]  0.000000  2.090469 37.483838 39.574304 33.284494\n[1]  0.000000  4.576136 13.682646 18.253100 19.300103\n[1]  0.000000  5.665359 13.683210 19.347962 18.156105\n[1]  0.000000  2.089753 13.683210 15.772961  9.218671\n[1]  0.000000  4.576136 65.448513 70.018620 71.125041\n[1]  0.000000  5.665359 65.446603 71.097774 73.064193\n[1]  0.000000  2.089753 65.446603 67.536353 61.271907\n[1]  0.000000  4.585888 24.804803 29.389059 29.186278\n[1]  0.000000  5.670456 24.810082 30.472134 31.911900\n[1]  0.000000  2.089752 24.810082 26.899831 20.559078\n[1]  0.000000  4.585888 30.995519 35.579611 35.472419\n[1]  0.000000  5.670456 31.000798 36.663757 37.988882\n[1]  0.000000  2.089752 31.000798 33.090547 26.733313\n[1]  0.000000  4.585888 55.134859 59.719092 59.530558\n[1]  0.000000  5.670456 55.140138 60.802019 62.261990\n[1]  0.000000  2.089752 55.140138 57.229887 50.895268\n[1]  0.000000  4.585888 43.591930 48.176267 47.922734\n[1]  0.000000  5.670456 43.597210 49.258523 50.782911\n[1]  0.000000  2.089752 43.597210 45.686958 39.362232\n[1]  0.000000  4.585888 42.195786 46.780030 46.584711\n[1]  0.000000  5.670456 42.201065 47.862985 49.318393\n[1]  0.000000  2.089752 42.201065 44.290814 37.954218\n[1]  0.00000  4.58061 27.66176 32.23480 33.56893\n[1]  0.000000  5.670445 27.664689 33.331915 33.809587\n[1]  0.000000  2.089875 27.664689 29.754561 23.313669\n[1]  0.00000  4.58061 39.80030 44.37772 44.84431\n[1]  0.000000  5.670445 39.803227 45.464493 46.992851\n[1]  0.000000  2.089875 39.803227 41.893098 35.578718\n[1]  0.000000  4.581065 17.721274 22.297809 23.117675\n[1]  0.000000  5.670445 17.723668 23.380601 25.297757\n[1]  0.00000  2.08993 17.72367 19.81359 13.52592\n[1]   0.0000  83.6010  17.3351 100.9201 103.0080\n[1]  0.00000 64.20562 17.33510 81.53497 82.59389\n[1]  0.00000 21.85912 13.87903 35.73783 33.89620\n[1]  0.00000 15.02998 13.87903 28.87792 31.63712\n[1]  0.00000 13.85114 12.21003 26.06093 23.94688\n[1]  0.00000 13.87903 11.19791 25.04036 27.96487\n[1]  0.00000 13.87903 14.30629 28.15590 30.85926\n[1]  0.000000  9.558963  5.410223 14.936353 17.751090\n[1]  0.00000 29.89889  5.41031 35.29963 36.86957\n[1]  0.00000 50.47116  5.41031 55.87224 57.40723\n[1]  0.000000 51.357075  5.410344 53.971603 62.919018\n[1]  0.000000 33.086345  5.410259 38.484305 40.306855\n[1]  0.000000 22.996800  5.410317 28.397691 29.952794\n[1]  0.000000 19.473193  5.410317 24.872422 26.590735\n[1]  0.000000  3.585473  9.558963 13.113193 15.877521\n[1]  0.000000 23.438381  9.558963 32.995676 32.815497\n[1]  0.000000  6.275950  9.558963 15.834914  6.191235\n[1]  0.000000  3.585674 29.898886 33.470544 35.424662\n[1]  0.00000 23.43838 29.89889 52.98953 58.32674\n[1]  0.000000  6.276006 29.898886 36.174892 25.227748\n[1]  0.000000  3.585674 50.471165 54.041443 56.090063\n[1]  0.00000 23.43838 50.47116 73.50844 79.01677\n[1]  0.000000  6.276006 50.471165 56.747170 45.798784\n[1]  0.000000  3.585938 51.357075 52.250532 61.087508\n[1]  0.00000 23.43838 51.35708 74.79484 73.61471\n[1]  0.000000  6.242429 51.357075 57.599505 46.948492\n[1]  0.000000  3.585592 33.086345 36.664326 38.004576\n[1]  0.00000 23.43838 33.08635 56.41445 60.47991\n[1]  0.000000  6.237921 33.086345 39.324267 28.421943\n[1]  0.000000  3.585897 22.996800 26.569588 28.456364\n[1]  0.00000 23.43838 22.99680 46.12705 51.32245\n[1]  0.000000  6.275974 22.996800 29.272775 18.326451\n[1]  0.000000  3.585897 19.473193 23.051217 24.425512\n[1]  0.00000 23.43838 19.47319 42.76630 47.12530\n[1]  0.000000  6.275974 19.473193 25.749168 14.807721\n[1]  0.000000 11.664515  1.948924 13.612102 13.210393\n[1]  0.000000  9.866833  1.950405 11.815732 11.532680\n[1]  0.000000  8.991960  1.952637 10.943385 10.442859\n[1] 0.000000 2.134556 7.585277 9.718930 8.923568\n[1]  0.000000  5.430767  7.583787 12.966160 16.176670\n[1]   0.00000 265.37541  11.78125 277.15666 261.54043\n[1]   0.00000 291.59807  11.78125 303.37932 287.77462\n[1]  0.000000  1.772766 41.425972 43.198240 41.807628\n[1]  0.00000 22.82056 12.30459 34.97568 39.36530\n[1]  0.00000 15.77894 12.30459 28.06441 30.33170\n[1]  0.00000 27.98789 12.30459 40.15831 44.43202\n[1]  0.00000 50.57556 12.30459 62.73250 67.10889\n[1]  0.00000 33.22197 12.30458 45.25103 50.31749\n[1]  0.00000 36.60502 11.98339 48.56000 51.22802\n[1]   0.00000  84.54635  12.30459  96.69951 101.10311\n[1]  0.00000 32.31730 12.30459 44.47156 48.86730\n[1]  0.00000 16.03984 12.30459 28.21285 32.46576\n[1]   0.00000 103.74127  12.30457 116.04407 115.91901\n[1]  0.00000 22.71317 12.30457 35.01610 34.81644\n[1]  0.00000 68.84962 12.30457 81.00179 85.41227\n[1]   0.00000 118.06227  12.30457 130.35845 131.79579\n[1]  0.00000 42.58666 12.30457 54.89040 54.01246\n[1]  0.00000 22.98109 12.30457 35.28483 34.39560\n[1]  0.00000 69.04126 12.30457 81.19697 85.58217\n[1]  0.00000 38.69565 12.30457 50.99838 50.91220\n[1]  0.00000 15.37661 12.30457 27.67921 27.66215\n[1]  0.00000 17.42329 12.30459 29.63286 33.54166\n[1]  0.00000 12.30459 11.61686 23.81066 27.88101\n[1]  0.00000 29.31519 11.43866 40.75355 38.85824\n[1]  0.000000  9.700429 29.305879 38.989108 41.149509\n[1]  0.00000 29.30588 10.52403 39.80734 42.24225\n[1]  0.00000 29.30588 15.53401 44.81997 47.12891\n[1]  0.00000 69.80057 16.27065 86.06962 85.84879\n[1]  0.000000  6.616972 10.062206 16.663258 18.745696\n[1]  0.000000  6.155098 10.062206 16.202901 18.184356\n[1]  0.000000  6.616988 24.225873 30.797821 33.934817\n[1]  0.00000  6.15509 24.22587 30.32222 33.73182\n[1]  0.000000  6.551703 10.898311 17.412814 20.354599\n[1]  0.000000  6.142046 10.898311 16.990990 20.221910\n[1]  0.000000  6.619704 17.854716 24.434140 27.457064\n[1]  0.000000  6.154176 17.854716 23.963924 27.099278\n[1]  0.000000  6.616978 28.656520 35.236597 38.170189\n[1]  0.000000  6.152852 28.656520 34.755065 38.083853\n[1]  0.000000  6.616978 19.706940 26.287268 29.213898\n[1]  0.000000  6.152852 19.706940 25.805836 29.127958\n[1]  0.000000  6.616978 65.157314 71.737806 74.659878\n[1]  0.000000  6.152852 65.157314 71.255315 74.594343\n[1]  0.000000  6.616858 24.211336 30.788660 33.792495\n[1]  0.00000  6.15520 24.21134 30.32828 33.29873\n[1]  0.000000  6.616858 37.832122 44.411713 47.355378\n[1]  0.00000  6.15520 37.83212 43.92758 47.35455\n[1]  0.000000  6.616858 21.126609 27.709889 30.547456\n[1]  0.00000  6.15520 21.12661 27.23146 30.48263\n[1]  0.000000 43.530493  5.982885 49.497086 51.602757\n[1]  0.000000  5.982853 19.478958 25.447864 27.396998\n[1]  0.000000 18.724014  3.858079 22.581210 21.764305\n[1]  0.000000 16.703631  4.187695 20.885241 22.000821\n[1]  0.000000 32.046674  4.188022 36.229837 37.120098\n[1]  0.000000 12.651277  4.186475 16.819660 19.031031\n[1]  0.000000 14.406667  4.188255 18.582957 20.377816\n[1]   0.000000 126.142006   4.184851 130.318492 131.753502\n[1]   0.000000 113.550894   4.117562 117.650823 119.836305\n[1]  0.000000 30.108395  4.188002 34.284401 36.081835\n[1]  0.000000 16.720665  4.188002 20.894892 22.831574\n\n\nWarning: There were 27 warnings in `mutate()`.\nThe first warning was:\nâ„¹ In argument: `coloc_non_unif = ifelse(...)`.\nâ„¹ In row 1.\nCaused by warning in `coloc.bf_bf()`:\n! snp overlap too small between datasets: too few snps with high posterior in one trait represented in other\nâ„¹ Run `dplyr::last_dplyr_warnings()` to see the 26 remaining warnings.\n\n\n\nmethod_comparison_data |&gt; \n  mutate(\n    h4_non_unif = max(h4_non_unif), \n    h4_unif = max(h4_unif)\n  ) |&gt; \n  ggplot(aes(h4_unif, h4_non_unif)) + \n  geom_point() + \n  geom_segment(aes(xend = h4_unif, yend = h4_unif), color = \"grey\") +\n  geom_abline(col = \"grey\") + \n  labs(\n    x = \"H4: Uniform priors\", \n    y = \"H4: Non-uniform priors\"\n  ) + \n  theme_bw()\n\n\n\n\n\nmethod_comparison_data |&gt; \n  mutate(\n    h4_non_unif = max(h4_non_unif), \n    h4_unif = max(h4_unif)\n  ) |&gt; \n  filter(h4_unif &lt;= 0.6 & h4_non_unif &gt; 0.6)\n\n# A tibble: 2 Ã— 9\n# Rowwise: \n  trait1           trait2 block    tss gene1 coloc_unif   coloc_non_unif h4_unif\n  &lt;chr&gt;            &lt;chr&gt;  &lt;chr&gt;  &lt;dbl&gt; &lt;lgl&gt; &lt;list&gt;       &lt;list&gt;           &lt;dbl&gt;\n1 ASTCO_Ferreira_â€¦ Schmiâ€¦ chr2â€¦ 1.98e8 FALSE &lt;named list&gt; &lt;named list&gt;     0.513\n2 Bossini-Castillâ€¦ VIT_Jâ€¦ chr4â€¦ 1.01e8 TRUE  &lt;named list&gt; &lt;named list&gt;     0.590\n# â„¹ 1 more variable: h4_non_unif &lt;dbl&gt;\n\n\n\nmethod_comparison_data |&gt; \n  mutate(\n    h4_non_unif = max(h4_non_unif), \n    h4_unif = max(h4_unif)\n  ) |&gt;  \n  mutate(h4_diff = h4_unif - h4_non_unif) |&gt; \n  ggplot(aes(h4_diff)) + \n  geom_histogram(binwidth = 0.005)\n\n\n\n\n\nmethod_comparison_data |&gt; \n  mutate(\n    h4_non_unif = max(h4_non_unif), \n    h4_unif = max(h4_unif)\n  ) |&gt;  \n  mutate(h4_diff = h4_unif - h4_non_unif) |&gt; \n  mutate(abs_h4_diff = abs(h4_diff)) |&gt; \n  arrange(desc(abs_h4_diff))\n\n# A tibble: 117 Ã— 11\n# Rowwise: \n   trait1          trait2 block    tss gene1 coloc_unif   coloc_non_unif h4_unif\n   &lt;chr&gt;           &lt;chr&gt;  &lt;chr&gt;  &lt;dbl&gt; &lt;lgl&gt; &lt;list&gt;       &lt;list&gt;           &lt;dbl&gt;\n 1 CCL19_Zhao_375â€¦ GENCOâ€¦ chr3â€¦ 1.33e8 FALSE &lt;named list&gt; &lt;named list&gt;     0.805\n 2 CD_DeLange_280â€¦ GTEx_â€¦ chr2â€¦ 2.48e7 FALSE &lt;named list&gt; &lt;named list&gt;     0.283\n 3 Alasoo_2018_geâ€¦ CD_Deâ€¦ chr2â€¦ 2.49e7 TRUE  &lt;named list&gt; &lt;named list&gt;     0.281\n 4 Lepik_2017_ge_â€¦ UC_Deâ€¦ chr2â€¦ 4.32e7 TRUE  &lt;named list&gt; &lt;named list&gt;     0.240\n 5 Nedelec_2016_gâ€¦ UC_Deâ€¦ chr2â€¦ 4.32e7 TRUE  &lt;named list&gt; &lt;named list&gt;     0.278\n 6 Quach_2016_ge_â€¦ TWEAKâ€¦ chr3â€¦ 9.87e7 TRUE  &lt;named list&gt; &lt;named list&gt;     0.691\n 7 Bossini-Castilâ€¦ VIT_Jâ€¦ chr4â€¦ 1.01e8 TRUE  &lt;named list&gt; &lt;named list&gt;     0.590\n 8 ASTCO_Ferreiraâ€¦ Schmiâ€¦ chr2â€¦ 1.98e8 FALSE &lt;named list&gt; &lt;named list&gt;     0.513\n 9 AITD_Saevarsdoâ€¦ GTEx_â€¦ chr2â€¦ 6.23e7 FALSE &lt;named list&gt; &lt;named list&gt;     0.380\n10 CD_DeLange_280â€¦ Schmiâ€¦ chr2â€¦ 1.98e8 FALSE &lt;named list&gt; &lt;named list&gt;     0.701\n# â„¹ 107 more rows\n# â„¹ 3 more variables: h4_non_unif &lt;dbl&gt;, h4_diff &lt;dbl&gt;, abs_h4_diff &lt;dbl&gt;\n\nmethod_comparison_data |&gt; \n  mutate(\n    h4_non_unif = max(h4_non_unif), \n    h4_unif = max(h4_unif)\n  ) |&gt;  \n  mutate(h4_diff = h4_unif - h4_non_unif) |&gt; \n  mutate(abs_h4_diff = abs(h4_diff)) |&gt; \n  arrange(abs_h4_diff)\n\n# A tibble: 117 Ã— 11\n# Rowwise: \n   trait1          trait2 block    tss gene1 coloc_unif   coloc_non_unif h4_unif\n   &lt;chr&gt;           &lt;chr&gt;  &lt;chr&gt;  &lt;dbl&gt; &lt;lgl&gt; &lt;list&gt;       &lt;list&gt;           &lt;dbl&gt;\n 1 Quach_2016_ge_â€¦ TRANCâ€¦ chr3â€¦ 1.73e8 TRUE  &lt;named list&gt; &lt;named list&gt;   1.65e-7\n 2 GTEx_ge_blood.â€¦ UC_Deâ€¦ chr2â€¦ 2.28e8 TRUE  &lt;named list&gt; &lt;named list&gt;   1.00e+0\n 3 AITD_Saevarsdoâ€¦ GTEx_â€¦ chr2â€¦ 2.28e8 FALSE &lt;named list&gt; &lt;named list&gt;   1.00e+0\n 4 Quach_2016_ge_â€¦ TRANCâ€¦ chr3â€¦ 1.73e8 TRUE  &lt;named list&gt; &lt;named list&gt;   1.67e-7\n 5 TwinsUK_ge_skiâ€¦ UC_Deâ€¦ chr2â€¦ 1.99e8 TRUE  &lt;named list&gt; &lt;named list&gt;   7.42e-1\n 6 ASTCO_Ferreiraâ€¦ GTEx_â€¦ chr2â€¦ 2.28e8 FALSE &lt;named list&gt; &lt;named list&gt;   2.35e-1\n 7 ASTCO_Ferreiraâ€¦ GENCOâ€¦ chr2â€¦ 2.28e8 FALSE &lt;named list&gt; &lt;named list&gt;   9.96e-1\n 8 GENCORD_ge_T-câ€¦ UC_Deâ€¦ chr2â€¦ 2.28e8 TRUE  &lt;named list&gt; &lt;named list&gt;   8.22e-1\n 9 AITD_Saevarsdoâ€¦ GENCOâ€¦ chr2â€¦ 2.28e8 FALSE &lt;named list&gt; &lt;named list&gt;   8.83e-1\n10 Quach_2016_ge_â€¦ TWEAKâ€¦ chr3â€¦ 9.87e7 TRUE  &lt;named list&gt; &lt;named list&gt;   9.88e-1\n# â„¹ 107 more rows\n# â„¹ 3 more variables: h4_non_unif &lt;dbl&gt;, h4_diff &lt;dbl&gt;, abs_h4_diff &lt;dbl&gt;\n\n\nLower Pr(H4) with the non-uniform priors.\n\nsnps1 &lt;- colnames(BF[[\"chr3_block79\"]][[\"CCL19_Zhao_37563310_1-hg38.tsv.gz\"]])\nsnps2 &lt;- colnames(BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]])\nisnps &lt;- intersect(snps1, snps2)\nhg38_data |&gt; \n  filter(ensembl_gene_id == \"ENSG00000113971\")\n\n# A tibble: 1 Ã— 2\n  ensembl_gene_id       tss\n  &lt;chr&gt;               &lt;dbl&gt;\n1 ENSG00000113971 132721707\n\nplot_bfs(BF[[\"chr3_block79\"]][[\"CCL19_Zhao_37563310_1-hg38.tsv.gz\"]], isnps) + \n plot_bfs(BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]], isnps, \n          tss = 132721707)  \n\n\n\n\nHigher Pr(H4) with the non-uniform priors.\n\nsnps1 &lt;- colnames(BF[[\"chr2_block25\"]][[\"Lepik_2017_ge_blood.ENSG00000234936\"]])\nsnps2 &lt;- colnames(BF[[\"chr2_block25\"]][[\"UC_DeLange_28067908_1-hg38.tsv.gz\"]])\nisnps &lt;- intersect(snps1, snps2)\nhg38_data |&gt; \n  filter(ensembl_gene_id == \"ENSG00000234936\")\n\n# A tibble: 1 Ã— 2\n  ensembl_gene_id      tss\n  &lt;chr&gt;              &lt;dbl&gt;\n1 ENSG00000234936 43229573\n\nplot_bfs(BF[[\"chr2_block25\"]][[\"Lepik_2017_ge_blood.ENSG00000234936\"]], isnps) + \n plot_bfs(BF[[\"chr2_block25\"]][[\"UC_DeLange_28067908_1-hg38.tsv.gz\"]], isnps, \n          tss = 43229573, with_prior = TRUE)  \n\n\n\n\nNo change, high Pr(H4)\n\nsnps1 &lt;- colnames(BF[[\"chr2_block130\"]][[\"GENCORD_ge_T-cell.ENSG00000115009\"]])\nsnps2 &lt;- colnames(BF[[\"chr2_block130\"]][[\"ASTCO_Ferreira_30929738_1-hg38.tsv.gz\"]])\nisnps &lt;- intersect(snps1, snps2)\nhg38_data |&gt; \n  filter(ensembl_gene_id == \"ENSG00000115009\")\n\n# A tibble: 1 Ã— 2\n  ensembl_gene_id        tss\n  &lt;chr&gt;                &lt;dbl&gt;\n1 ENSG00000115009 227813842.\n\nplot_bfs(BF[[\"chr2_block130\"]][[\"GENCORD_ge_T-cell.ENSG00000115009\"]], isnps) + \n plot_bfs(BF[[\"chr2_block130\"]][[\"ASTCO_Ferreira_30929738_1-hg38.tsv.gz\"]], isnps, \n          tss = 227813842)  \n\n\n\ncoloc.bf_bf(BF[[\"chr2_block130\"]][[\"GENCORD_ge_T-cell.ENSG00000115009\"]], \n            BF[[\"chr2_block130\"]][[\"ASTCO_Ferreira_30929738_1-hg38.tsv.gz\"]])\n\n[1]  0.00000 47.69470 23.43838 70.73193 76.24038\n[1]  0.000000 47.694696  6.276006 53.970702 43.022315\n\n\n$summary\n   nsnps        hit1        hit2    PP.H0.abf    PP.H1.abf    PP.H2.abf\n1:  4740 2:227805859 2:227805721 7.717351e-34 3.990357e-13 1.165810e-23\n2:  4740 2:227805859 2:227887158 3.630766e-24 1.877335e-03 1.930336e-21\n     PP.H3.abf    PP.H4.abf idx1 idx2\n1: 0.004036047 9.959640e-01    1    1\n2: 0.998105112 1.755304e-05    1    2\n\n$results\n              snp SNP.PP.H4.row1 SNP.PP.H4.row2\n   1: 2:227255202   5.168946e-41   1.841991e-26\n   2: 2:227255590   2.176152e-40   7.074883e-26\n   3: 2:227255715   7.856732e-40   3.204067e-25\n   4: 2:227256084   1.021424e-40   8.640170e-26\n   5: 2:227256385   1.061989e-38   5.376830e-25\n  ---                                          \n4736: 2:228505642   6.660958e-41   2.373914e-26\n4737: 2:228505810   4.590501e-41   2.082161e-26\n4738: 2:228505829   6.031528e-41   2.368550e-26\n4739: 2:228505851   5.050344e-41   1.859417e-26\n4740: 2:228506071   4.461520e-40   1.666774e-25\n\n$priors\n   p1    p2   p12 \n1e-04 1e-04 5e-06 \n\ncoloc.bf_bf(BF[[\"chr2_block130\"]][[\"GENCORD_ge_T-cell.ENSG00000115009\"]], \n            BF[[\"chr2_block130\"]][[\"ASTCO_Ferreira_30929738_1-hg38.tsv.gz\"]], \n            tss2 = 227813842)\n\n[1]  0.00000 47.69470 26.21557 73.50952 79.01677\n[1]  0.000000 47.694696  7.742072 55.436768 45.798784\n\n\n$summary\n   nsnps        hit1        hit2    PP.H0.abf    PP.H1.abf    PP.H2.abf\n1:  4740 2:227805859 2:227805721 4.804996e-35 2.484486e-14 1.166733e-23\n2:  4740 2:227805859 2:227887158 8.392679e-25 4.339544e-04 1.933035e-21\n     PP.H3.abf    PP.H4.abf idx1 idx2\n1: 0.004040824 9.959592e-01    1    1\n2: 0.999500874 6.517184e-05    1    2\n\n$results\n              snp SNP.PP.H4.row1 SNP.PP.H4.row2\n   1: 2:227255202   5.168946e-41   1.841991e-26\n   2: 2:227255590   2.176152e-40   7.074883e-26\n   3: 2:227255715   7.856732e-40   3.204067e-25\n   4: 2:227256084   1.021424e-40   8.640170e-26\n   5: 2:227256385   1.061989e-38   5.376830e-25\n  ---                                          \n4736: 2:228505642   6.660958e-41   2.373914e-26\n4737: 2:228505810   4.590501e-41   2.082161e-26\n4738: 2:228505829   6.031528e-41   2.368550e-26\n4739: 2:228505851   5.050344e-41   1.859417e-26\n4740: 2:228506071   4.461520e-40   1.666774e-25\n\n$priors\n   p1    p2   p12 \n1e-04 1e-04 5e-06 \n\n\nQ: How to you make the ultimate colocalisation? Is the â€˜sharpnessâ€™ of the peak important?"
  },
  {
    "objectID": "eqtl-tss-distance-analysis.html",
    "href": "eqtl-tss-distance-analysis.html",
    "title": "eQTL distribution analysis",
    "section": "",
    "text": "library(readr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(tools)\nlibrary(forcats)\nlibrary(janitor)\nlibrary(ggupset)\nlibrary(purrr)\nlibrary(dplyr, warn.conflicts = FALSE)\n\nsource(here::here(\"code\", \"plot-utils.R\"))\n\nconflicted::conflict_prefer(\"select\", \"dplyr\")\nconflicted::conflict_prefer(\"filter\", \"dplyr\")\neqtl_catalogue_data &lt;- readRDS(here::here(\"data\", \"processed-data\", \"eqtl-catalogue.rds\"))\ngtex_data &lt;- readRDS(here::here(\"data\", \"processed-data\", \"gtex.rds\"))\nadipos_express_marignal_data &lt;- readRDS(here::here(\"data\", \"processed-data\", \"adipos-express-marginal.rds\"))\neqtlgen_data &lt;- readRDS(here::here(\"data\", \"processed-data\", \"eqtlgen.rds\"))\nonek1k_data &lt;- readRDS(here::here(\"data\", \"processed-data\", \"onek1k.rds\"))"
  },
  {
    "objectID": "eqtl-tss-distance-analysis.html#eqtl-catalouge",
    "href": "eqtl-tss-distance-analysis.html#eqtl-catalouge",
    "title": "eQTL distribution analysis",
    "section": "eQTL catalouge",
    "text": "eQTL catalouge\n\neqtl_catalogue_data |&gt;\n  mutate(abs_tss_distance = log10(abs_tss_distance)) |&gt; \n  ggplot(aes(file, abs_tss_distance, fill = study_label)) +\n  geom_boxplot(outlier.alpha = 0.1) +\n  coord_flip() +\n  labs(\n    x = \"eQTL catalogue datasets\",\n    y = \"Distance from the TSS (bp)\",\n    fill = \"Study\"\n  ) +\n  theme_jp_vgrid() + \n  theme(axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        legend.position = \"right\", \n        legend.text = element_text(size = 14))\n\nWarning: Removed 18 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\neqtl_catalogue_data |&gt;\n  mutate(abs_tss_distance = log10(abs_tss_distance)) |&gt; \n  summarise(abs_tss_distance = median(abs_tss_distance), \n            .by = c(file, sample_size, study_label)) |&gt;\n  ggplot(aes(sample_size, abs_tss_distance, colour = study_label)) +\n  geom_point(size = 3) +\n  labs(\n    x = \"Study sample size\",\n    y = \"Median distance to TSS\", \n    colour = \"Study\"\n  ) +\n  theme_jp() + \n  theme(axis.text = element_text(size = 10), \n        legend.position = \"right\", \n        legend.text = element_text(size = 14))"
  },
  {
    "objectID": "eqtl-tss-distance-analysis.html#gtex",
    "href": "eqtl-tss-distance-analysis.html#gtex",
    "title": "eQTL distribution analysis",
    "section": "GTEx",
    "text": "GTEx\n\ngtex_data |&gt;\n  mutate(tissue = fct_rev(factor(tissue))) |&gt;\n  mutate(abs_tss_distance = log10(abs_tss_distance)) |&gt;  \n  ggplot(aes(tissue, abs_tss_distance)) +\n  geom_boxplot(fill = \"grey\", outlier.alpha = 0.1) +\n  labs(\n    x = \"Tissue\",\n    y = \"Distance to TSS\"\n  ) +\n  coord_flip() +\n  theme_jp_vgrid() + \n  theme(axis.text = element_text(size = 8))\n\nWarning: Removed 56 rows containing non-finite values (`stat_boxplot()`)."
  },
  {
    "objectID": "eqtl-tss-distance-analysis.html#adipoexpress-marginal",
    "href": "eqtl-tss-distance-analysis.html#adipoexpress-marginal",
    "title": "eQTL distribution analysis",
    "section": "AdipoExpress marginal",
    "text": "AdipoExpress marginal\n\nadipos_express_marignal_data |&gt; \n  ggplot(aes(file, abs_tss_distance)) +\n  geom_boxplot(fill = \"grey\", outlier.alpha = 0.1) +\n  labs(\n    x = \"Chromosome\",\n    y = \"Distance to TSS\"\n  ) +\n  coord_flip() +\n  theme_bw()"
  },
  {
    "objectID": "eqtl-tss-distance-analysis.html#onek1k",
    "href": "eqtl-tss-distance-analysis.html#onek1k",
    "title": "eQTL distribution analysis",
    "section": "Onek1k",
    "text": "Onek1k\n\nBy combination of cell types\n\ncombination_onek1k_data &lt;- onek1k_data |&gt; \n  summarise(cell_type_collapsed = paste0(sort(unlist(cell_type)), collapse=\"-\"),\n            .by = c(gene_id, abs_tss_distance, round))\n\nmost_common_cell_types &lt;- combination_onek1k_data |&gt; \n  count(cell_type_collapsed) |&gt; \n  arrange(desc(n)) |&gt; \n  slice_head(n = 30) |&gt; \n  pull(cell_type_collapsed)\n\nsingle_cell_types &lt;- keep(most_common_cell_types, \n                          \\(x) !grepl(\"-\", x, fixed = TRUE))\n\ncombination_onek1k_data |&gt; \n  mutate(abs_tss_distance = log10(abs_tss_distance)) |&gt; \n  filter(cell_type_collapsed %in% most_common_cell_types) |&gt; \n  mutate(cell_type_collapsed = fct_reorder(\n    factor(cell_type_collapsed), \n    abs_tss_distance, \n    .desc = TRUE)\n  ) |&gt; \n  ggplot(aes(x = cell_type_collapsed, y = abs_tss_distance)) +\n  geom_boxplot() + \n  axis_combmatrix(sep = \"-\", levels = single_cell_types) + \n  labs(\n    x = \"\", \n    y = \"log(10) abs tss distance\"\n  ) + \n  theme_jp() + \n  theme(axis.text = element_text(size = 12), \n        axis.title.y = element_text(vjust=-30))\n\nWarning: Removed 1 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\n\nBy individual cell type\n\nonek1k_data |&gt; \n  filter(n_cell_types == 1) |&gt; \n  mutate(cell_type = unlist(cell_type)) |&gt; \n  mutate(abs_tss_distance = log10(abs_tss_distance)) |&gt;\n  mutate(cell_type = fct_reorder(factor(cell_type), abs_tss_distance)) |&gt; \n  ggplot(aes(cell_type, abs_tss_distance)) + \n  geom_boxplot() + \n  coord_flip() + \n  labs(\n    y = \"Distance\", \n    x = \"Cell type\"\n  ) +\n  theme_jp_vgrid() + \n  theme(axis.text = element_text(size = 10))\n\n\n\n\n\n\nBy number of cell types for eQTL\n\nonek1k_data |&gt; \n  mutate(abs_tss_distance = log10(abs_tss_distance)) |&gt;\n  ggplot(aes(factor(n_cell_types), abs_tss_distance)) +\n  geom_boxplot(outlier.alpha = 0.1) +\n  labs(\n    x = \"Number of cell types with eQTL\",\n    y = \"Distance of eQTL SNP to eGene TSS (log10 bp)\",\n  ) +\n  theme_jp()\n\nWarning: Removed 1 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\nonek1k_data |&gt; \n  ggplot(aes(factor(n_cell_types))) +\n  geom_bar() +\n  labs(\n    x = \"Number of cell types with eQTL\",\n    y = \"Number of eQTL-eGene pairs\",\n  ) +\n  theme_jp()\n\n\n\n\n\n\nBy round of conditional analysis\n\nonek1k_data |&gt; \n  mutate(abs_tss_distance = log10(abs_tss_distance)) |&gt; \n  ggplot(aes(factor(round), abs_tss_distance)) +\n  geom_boxplot(fill = \"grey\", outlier.alpha = 0.1) +\n  labs(\n    x = \"Round of conditional analysis\",\n    y = \"Distance of eQTL variant to eGene TSS (log10 bp)\",\n  ) +\n  theme_jp()\n\nWarning: Removed 1 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\nonek1k_data |&gt; \n  ggplot(aes(factor(round))) +\n  geom_bar() +\n  labs(\n    x = \"Round\",\n    y = \"Number of eQTL-eGene pairs\",\n  ) +\n  theme_jp()"
  },
  {
    "objectID": "eqtl-tss-distance-analysis.html#across-studies",
    "href": "eqtl-tss-distance-analysis.html#across-studies",
    "title": "eQTL distribution analysis",
    "section": "Across studies",
    "text": "Across studies\n\nbind_rows(\n  gtex_data |&gt;\n    select(abs_tss_distance) |&gt;\n    mutate(study = \"GTX v8\"),\n  eqtlgen_data |&gt;\n    select(abs_tss_distance) |&gt;\n    mutate(study = \"eQTLGen\"),\n  eqtl_catalogue_data |&gt;\n    select(abs_tss_distance) |&gt;\n    mutate(study = \"eQTL Catalogue\"),\n  adipos_express_marignal_data |&gt; \n    select(abs_tss_distance) |&gt; \n    mutate(study = \"AdiposExpress\\n (Marginal)\"),\n  onek1k_data |&gt; \n    filter(round == 1) |&gt;\n    select(abs_tss_distance) |&gt; \n    mutate(study = \"OneK1K\")\n) |&gt;\n  mutate(log10_abs_tss_distance = log10(abs_tss_distance)) |&gt; \n  ggplot(aes(study, log10_abs_tss_distance)) +\n  geom_violin(fill = \"grey\") +\n  geom_boxplot(outlier.alpha = 0.1) +\n  labs(\n    x = \"Study\",\n    y = \"Absolute Log(10) distance from variant to TSS\",\n  ) +\n  coord_flip() +\n  theme_jp_vgrid()\n\nWarning: Removed 76 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 76 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\nonek1k_data\n\n# A tibble: 6,749 Ã— 9\n   gene_id         tss_distance round cell_type_collapsed cell_type n_cell_types\n   &lt;chr&gt;                  &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;               &lt;list&gt;           &lt;int&gt;\n 1 ENSG00000001561      -30457      1 Natural Killer Cell &lt;chr [1]&gt;            1\n 2 ENSG00000001561      731144      2 Dendritic Cell      &lt;chr [1]&gt;            1\n 3 ENSG00000002549       -6032.     1 Classic Monocyte    &lt;chr [1]&gt;            1\n 4 ENSG00000002549        5396.     1 Non-classic Monocyâ€¦ &lt;chr [1]&gt;            1\n 5 ENSG00000002822     -307020      1 CD8 Effector memory &lt;chr [1]&gt;            1\n 6 ENSG00000002822     -243222      1 Non-classic Monocyâ€¦ &lt;chr [1]&gt;            1\n 7 ENSG00000002822     -195349      1 Natural Killer Cell &lt;chr [1]&gt;            1\n 8 ENSG00000002919      -32379      1 CD8 Effector memory &lt;chr [1]&gt;            1\n 9 ENSG00000002933      -21895      1 Non-classic Monocyâ€¦ &lt;chr [1]&gt;            1\n10 ENSG00000002933      -21895      2 Dendritic Cell      &lt;chr [1]&gt;            1\n# â„¹ 6,739 more rows\n# â„¹ 3 more variables: abs_tss_distance &lt;dbl&gt;, log10_tss_distance &lt;dbl&gt;,\n#   log10_abs_tss_distance &lt;dbl&gt;\n\nonek1k_data |&gt; \n  filter(abs(tss_distance) &lt;= 150000) |&gt; \n  ggplot(aes(tss_distance)) + \n  geom_density(bw = \"SJ\") + \n  facet_wrap(~ round) \n\n\n\n\n\ndens &lt;- eqtlgen_data |&gt; \n  filter(abs(tss_distance) &lt;= 300000) |&gt; \n  pull(tss_distance) |&gt; \n  density(bw = \"SJ\")\n  \ndens_data &lt;- tibble(x = dens$x, y = dens$y)\n\nsaveRDS(dens_data, here::here(\"output\", \"data\", \"density.rds\"))\n\n\nlog10_dens &lt;- eqtlgen_data |&gt; \n  filter(log10_abs_tss_distance &lt;= log10(300000)) |&gt; \n  filter(log10_abs_tss_distance &gt; 1) |&gt; \n  pull(log10_abs_tss_distance) |&gt; \n  density(bw = \"SJ\")\n\n\nall_studies_data &lt;- bind_rows(\n gtex_data |&gt;\n    mutate(study = \"GTX v8\"),\n  eqtlgen_data |&gt;\n    mutate(study = \"eQTLGen\"),\n  eqtl_catalogue_data |&gt;\n    mutate(study = \"eQTL Catalogue\"),\n  onek1k_data |&gt; \n    filter(round == 1) |&gt;\n    mutate(study = \"OneK1K\")\n)\n\n\nall_studies_data |&gt; \n  filter(abs(tss_distance) &lt;= 100000) |&gt; \n  mutate(kb = tss_distance / 1000) |&gt; \n  ggplot(aes(kb)) + \n  geom_density(bw = \"SJ\") + \n  facet_wrap(~ study, scales = \"free_y\") + \n  theme_jp() + \n  labs(\n    y = \"\",\n    x = \"Distance to TSS (kb)\"\n  ) + \n  theme(\n    axis.text = element_text(size = 12), \n    axis.title = element_text(size = 16),\n    strip.text = element_text(size = 20, hjust = 0)\n  )"
  }
]