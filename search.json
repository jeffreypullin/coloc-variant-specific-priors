[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "eQTL TSS analysis\nMethod testing\neQTL method testing"
  },
  {
    "objectID": "eqtl-method-testing.html",
    "href": "eqtl-method-testing.html",
    "title": "eQTL-based method comparison",
    "section": "",
    "text": "library(readr)\nlibrary(janitor)\nlibrary(dplyr)\nlibrary(patchwork)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(stringr)\nlibrary(ggplot2)\n\ndevtools::load_all(\"~/coloc\")\nplot_bfs &lt;- function(bfs, snps, tss = NULL, with_prior = FALSE) {\n \n  # Only take the first susie signal.\n  bfs &lt;- bfs[1, snps]\n  # Assume SNPS are in chr:bp format.\n  bps &lt;- vapply(strsplit(snps, \":\"), \\(x) as.numeric(x[[2]]), numeric(1))\n  \n  if (!is.null(tss) & with_prior) {\n    prior_vec &lt;- 10^-4 * length(bps) * coloc:::calculate_non_uniform_p(bps, tss)\n    bfs &lt;- bfs + log(prior_vec)\n  }\n  \n  if (is.null(tss) & with_prior) {\n    bfs &lt;- bfs + log(10^-4)\n  }\n  \n  p &lt;- tibble(bf = bfs, bp = bps) |&gt; \n    ggplot(aes(bp, bf)) + \n    geom_point()\n  \n  if (!is.null(tss)) {\n    p &lt;- p + geom_vline(xintercept = tss, colour = \"red\")\n  }\n \n  if (with_prior) {\n    p &lt;- p + labs(x = \"\", y = \"BF + log(p)\")\n  } else {\n    p &lt;- p + labs(x = \"\", y = \"BF\")\n  }\n   \n  p + \n    theme_bw()\n}\n\nlookup_tss &lt;- function(trait) {\n  gene_id &lt;- unlist(strsplit(trait, \".\", fixed = TRUE))[[2]]\n  hg38_data |&gt; \n    filter(ensembl_gene_id == gene_id) |&gt; \n    pull(tss)\n}\n\nplot_multiple_bfs &lt;- function(trait1, trait2, block, tss1 = NULL, tss2 = NULL) {\n  \n  bfs1 &lt;-  BF[[block]][[trait1]]\n  bfs2 &lt;-  BF[[block]][[trait2]]\n  \n  snps1 &lt;- colnames(bfs1)\n  snps2 &lt;- colnames(bfs2)\n  isnps &lt;- intersect(snps1, snps2)\n  bps &lt;- vapply(strsplit(isnps, \":\"), \\(x) as.numeric(x[[2]]), numeric(1))\n  \n  bfs1 &lt;- bfs1[1, isnps]\n  bfs2 &lt;- bfs2[1, isnps]\n \n  p &lt;- tibble(bp = bps, !!trait1 := bfs1, !!trait2 := bfs2) |&gt; \n    pivot_longer(cols = -bp, \n                 values_to = \"bf\", names_to = \"trait\") |&gt; \n    ggplot(aes(bp, bf, col = trait)) +\n    geom_point(alpha = 0.8) +\n    labs(\n      x = \"Position\", \n      y = \"ABF\",\n      col = \"Trait\"\n    ) + \n    theme_bw() + \n    theme(legend.position = \"top\") + \n    theme(plot.title = element_text(size = 12))\n  \n  if (!is.null(tss1)) {\n    p &lt;- p + geom_vline(xintercept = tss1)\n  }\n  \n  if (!is.null(tss2)) {\n    p &lt;- p + geom_vline(xintercept = tss2)\n  }\n \n  coloc_no_tss &lt;- round(coloc.bf_bf(bfs1, bfs2)$summary$PP.H4.abf, 2)\n  coloc_tss1 &lt;- round(coloc.bf_bf(bfs1, bfs2, tss1 = tss1)$summary$PP.H4.abf, 2)\n  coloc_tss2 &lt;- round(coloc.bf_bf(bfs1, bfs2, tss2 = tss2)$summary$PP.H4.abf, 2)\n  coloc_both &lt;- round(coloc.bf_bf(bfs1, bfs2, tss1 = tss1, tss2 = tss2)$summary$PP.H4.abf, 2)\n  \n  p &lt;- p + ggtitle(paste0(\"No TSS Pr(H4): \",  coloc_no_tss, \", Trait 1 TSS Pr(H4): \",\n                          coloc_tss1, \", Trait 2 TSS Pr(H4): \", coloc_tss2, \n                          \", Both Pr(H4): \", coloc_both))\n  \n  p\n}\n\nplot_priors &lt;- function(trait1, trait2, block, tss1 = NULL, tss2 = NULL) {\n  tss1 &lt;- unlist(tss1)\n  tss2 &lt;- unlist(tss2)\n  \n  bfs1 &lt;-  BF[[block]][[trait1]]\n  bfs2 &lt;-  BF[[block]][[trait2]]\n\n  snps1 &lt;- colnames(bfs1)\n  snps2 &lt;- colnames(bfs2)\n  isnps &lt;- intersect(snps1, snps2)\n  bps &lt;- vapply(strsplit(isnps, \":\"), \\(x) as.numeric(x[[2]]), numeric(1))\n\n  Q &lt;- length(bps)\n  p1 &lt;- 1e-04\n  p2 &lt;- 1e-04\n  p12 &lt;- 5e-06\n  \n  priors &lt;- coloc:::calculate_non_uniform_priors(bps, tss1, tss2, p1, p2, p12)\n  p1_vec &lt;- priors$p1_vec\n  p2_vec &lt;- priors$p2_vec\n  p12_vec &lt;- priors$p12_vec\n  \n  tibble(bp = bps, p1 = log(p1_vec), p2 = log(p2_vec), p12 = log(p12_vec)) |&gt; \n    pivot_longer(-bp) |&gt; \n    ggplot(aes(bp, value, col = name)) + \n    geom_point() + \n    geom_line() +\n    labs(\n      x = \"Position\", \n      y = \"Probability\",\n      col = \"Prior\"\n    ) + \n    coord_cartesian(ylim = c(-20, -5)) + \n    theme_bw()\n}\neqtl_method_comparison_data &lt;- readRDS(here::here(\"output\", \"data\", \"eqtl-method-comparison.rds\"))\nBF &lt;- readRDS(here::here(\"output\", \"data\", \"reduced-bf-list.rds\"))\neqtl_method_comparison_data |&gt;\n  mutate(same_gene = tss1 == tss2) |&gt; \n  ggplot(aes(same_gene, h4_diff_tss1)) + \n  geom_boxplot() + \n  coord_cartesian(ylim = c(-0.75, 0.75)) + \n  theme_bw()\n\nWarning: Removed 1 rows containing non-finite values (`stat_boxplot()`).\neqtl_method_comparison_data |&gt;\n  mutate(same_gene = tss1 == tss2) |&gt; \n  ggplot(aes(same_gene, h4_diff_both)) + \n  geom_boxplot() + \n  coord_cartesian(ylim = c(-0.75, 0.75)) + \n  theme_bw()\n\nWarning: Removed 1 rows containing non-finite values (`stat_boxplot()`).\neqtl_method_comparison_data |&gt; \n  mutate(same_gene = tss1 == tss2) |&gt; \n  ggplot(aes(h4_unif, h4_non_unif_tss1, col = same_gene)) + \n  geom_point() + \n  geom_abline(col = \"grey\") + \n  labs(\n    x = \"H4: Uniform priors\", \n    y = \"H4: Non-uniform priors (TSS distance prior trait 1)\",\n    col = \"Same gene\"\n  ) + \n  theme_bw()\n\nWarning: Removed 1 rows containing missing values (`geom_point()`).\neqtl_method_comparison_data |&gt; \n  mutate(same_gene = tss1 == tss2) |&gt; \n  ggplot(aes(h4_unif, h4_non_unif_both, col = same_gene)) + \n  geom_point() + \n  geom_abline(col = \"grey\") + \n  labs(\n    x = \"H4: Uniform priors\", \n    y = \"H4: Non-uniform priors (TSS distance prior for both traits)\",\n    col = \"Same gene\"\n  ) + \n  theme_bw()\n\nWarning: Removed 1 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "eqtl-method-testing.html#same-gene-examples",
    "href": "eqtl-method-testing.html#same-gene-examples",
    "title": "eQTL-based method comparison",
    "section": "Same gene examples",
    "text": "Same gene examples\nDecrease in Pr(H4) (Trait 1 TSS)\nExamples:\nLarge decrease in Pr(H4) for TSS 1.\n\neqtl_method_comparison_data |&gt; \n  filter(tss1 == tss2) |&gt; \n  ungroup() |&gt; \n  arrange(h4_diff_tss1) |&gt; \n  slice(1) |&gt; \n  rowwise() |&gt; \n  mutate(plot = list(plot_multiple_bfs(trait1, trait2, block, tss1 = tss1, \n                                       tss2 = tss2))) |&gt; \n  pull(plot)\n\n[1]  0.00000 35.04323 49.37122 84.41417 82.43132\n[1]  0.00000 31.40964 50.78502 82.19212 82.43132\n[1]  0.00000 35.04323 50.78502 85.82790 80.90251\n\n\n[[1]]\n\n\n\n\neqtl_method_comparison_data |&gt; \n  filter(tss1 == tss2) |&gt; \n  ungroup() |&gt; \n  arrange(h4_diff_tss1) |&gt; \n  slice(1) |&gt; \n  mutate(plot = list(plot_priors(trait1, trait2, block, tss1, NULL))) |&gt; \n  pull(plot) |&gt; \n  pluck(1) + \neqtl_method_comparison_data |&gt; \n  filter(tss1 == tss2) |&gt; \n  ungroup() |&gt; \n  arrange(h4_diff_tss1) |&gt; \n  slice(1) |&gt; \n  mutate(plot = list(plot_priors(trait1, trait2, block, tss1, tss2))) |&gt; \n  pull(plot) |&gt; \n  pluck(1) + \n  plot_layout(ncol = 1, guides = \"collect\")\n\n\n\n\nIncrease in Pr(H4) (Trait 1 TSS)\nIntroduction of spurious colocalisation.\n\neqtl_method_comparison_data |&gt; \n  filter(tss1 == tss2) |&gt; \n  ungroup() |&gt; \n  arrange(desc(h4_diff_tss1)) |&gt; \n  slice(1) |&gt; \n  rowwise() |&gt; \n  mutate(plot = list(plot_multiple_bfs(trait1, trait2, block, tss1 = tss1, \n                                       tss2 = tss2))) |&gt; \n  pull(plot)\n\n[1]  0.00000  2.93790 43.48137 46.40360 48.47008\n[1]  0.000000  2.952403 47.432238 50.384346 48.470084\n[1]  0.00000  2.93790 47.43224 50.35447 49.46071\n\n\n[[1]]\n\n\n\n\neqtl_method_comparison_data |&gt; \n  filter(tss1 == tss2) |&gt; \n  ungroup() |&gt; \n  arrange(desc(h4_diff_tss1)) |&gt; \n  slice(1) |&gt; \n  pull(bf1) |&gt; \n  pluck(1) |&gt; \n  dim()\n\n[1]    1 7890\n\n\n\neqtl_method_comparison_data |&gt; \n  filter(tss1 == tss2) |&gt; \n  ungroup() |&gt; \n  arrange(h4_diff_both) |&gt; \n  slice(1) |&gt; \n  rowwise() |&gt; \n  mutate(plot = list(plot_multiple_bfs(trait1, trait2, block, tss1 = tss1, \n                                       tss2 = tss2))) |&gt; \n  pull(plot)\n\n[1]   0.0000 144.8168 199.6669 344.4742 346.0267\n[1]   0.0000 143.5996 202.6258 346.2238 346.0267\n[1]   0.0000 144.8168 202.6258 347.4393 345.2711\n\n\n[[1]]\n\n\n\n\n\nIs this effect just caused by ths TSSs being at the edge of the peak?"
  },
  {
    "objectID": "eqtl-method-testing.html#different-gene-examples",
    "href": "eqtl-method-testing.html#different-gene-examples",
    "title": "eQTL-based method comparison",
    "section": "Different gene examples",
    "text": "Different gene examples\n\neqtl_method_comparison_data |&gt; \n  filter(tss1 != tss2) |&gt; \n  ungroup() |&gt; \n  arrange(h4_diff_tss1) |&gt; \n  slice(4) |&gt; \n  rowwise() |&gt; \n  mutate(plot = list(plot_multiple_bfs(trait1, trait2, block, tss1 = tss1, \n                                       tss2 = tss2))) |&gt; \n  pull(plot)\n\n[1]  0.00000 13.90690 56.36059 70.26367 70.91083\n[1]  0.00000 12.34051 59.64666 71.97440 73.83502\n[1]  0.00000 13.90690 59.64666 73.54971 73.25698\n\n\n[[1]]\n\n\n\n\neqtl_method_comparison_data |&gt; \n  filter(tss1 != tss2) |&gt; \n  ungroup() |&gt; \n  arrange(h4_diff_tss1) |&gt; \n  slice(4) |&gt; \n  mutate(plot = list(plot_priors(trait1, trait2, block, tss1, ))) |&gt; \n  pull(plot)\n\n[[1]]"
  },
  {
    "objectID": "method-testing.html",
    "href": "method-testing.html",
    "title": "Method testing",
    "section": "",
    "text": "library(readr)\nlibrary(janitor)\nlibrary(dplyr)\nlibrary(patchwork)\nlibrary(tidyr)\n\n\nhg38_data &lt;- readRDS(\"/home/jp2045/coloc-estimated-eqtl-priors/data/tss-data/hg38-tss-data.rds\")\n\n\nplot_bfs &lt;- function(bfs, snps, tss = NULL, with_prior = FALSE) {\n \n  # Only take the first susie signal.\n  bfs &lt;- bfs[1, snps]\n  # Assume SNPS are in chr:bp format.\n  bps &lt;- vapply(strsplit(snps, \":\"), \\(x) as.numeric(x[[2]]), numeric(1))\n  \n  if (!is.null(tss) & with_prior) {\n    prior_vec &lt;- 10^-4 * length(bps) * coloc:::calculate_non_uniform_p(bps, tss)\n    bfs &lt;- bfs + log(prior_vec)\n  }\n  \n  if (is.null(tss) & with_prior) {\n    bfs &lt;- bfs + log(10^-4)\n  }\n  \n  p &lt;- tibble(bf = bfs, bp = bps) |&gt; \n    ggplot(aes(bp, bf)) + \n    geom_point()\n  \n  if (!is.null(tss)) {\n    p &lt;- p + geom_vline(xintercept = tss, colour = \"red\")\n  }\n \n  if (with_prior) {\n    p &lt;- p + labs(x = \"\", y = \"BF + log(p)\")\n  } else {\n    p &lt;- p + labs(x = \"\", y = \"BF\")\n  }\n   \n  p + \n    theme_bw()\n}\n\nlookup_tss &lt;- function(trait) {\n  gene_id &lt;- unlist(strsplit(trait, \".\", fixed = TRUE))[[2]]\n  hg38_data |&gt; \n    filter(ensembl_gene_id == gene_id) |&gt; \n    pull(tss)\n}\n\n\nload(\"/rds/project/cew54/rds-cew54-basis/People/CHRIS/colocs_for_jeffrey.RData\")\ndevtools::load_all(\"~/coloc\")\n\n# 27 rows have 'too small overlap' warnings.\nmethod_comparison_data &lt;- COLOC |&gt; \n  # The BLUEPRINT Bayes factors are empty.\n  filter(!(substr(trait1, 1, 9) == \"BLUEPRINT\" | substr(trait2, 1, 9) == \"BLUEPRINT\")) |&gt; \n  as_tibble() |&gt; \n  mutate(\n    gene1 = grepl(\"ENSG\", trait1, fixed = TRUE),\n    gene2 = grepl(\"ENSG\", trait2, fixed = TRUE)\n  ) |&gt; \n  filter(gene1 | gene2) |&gt; \n  rowwise() |&gt; \n  mutate(expr_hit = ifelse(gene1, hit1, hit2)) |&gt; \n  # Assume that only 1 trait is an expression trait.\n  mutate(tss = ifelse(gene1, lookup_tss(trait1), lookup_tss(trait2))) |&gt; \n  select(trait1, trait2, block, tss, gene1, expr_hit, hit1.margz, hit2.margz) |&gt;\n  mutate(coloc_unif = list(coloc.bf_bf(BF[[block]][[trait1]], BF[[block]][[trait2]]))) |&gt; \n  mutate(coloc_non_unif = ifelse(\n    gene1, \n    list(coloc.bf_bf(BF[[block]][[trait1]], BF[[block]][[trait2]], tss1 = tss)), \n    list(coloc.bf_bf(BF[[block]][[trait1]], BF[[block]][[trait2]], tss2 = tss))\n  )) |&gt; \n  rowwise() |&gt; \n  mutate(h4_unif = list(coloc_unif$summary$PP.H4.abf)) |&gt; \n  mutate(h4_non_unif = list(coloc_non_unif$summary$PP.H4.abf)) |&gt; \n  filter(!any(is.na(h4_unif))) |&gt; \n  filter(!any(is.na(h4_non_unif)))\n\n\nmethod_comparison_data |&gt; \n  mutate(\n    h4_non_unif = max(h4_non_unif), \n    h4_unif = max(h4_unif)\n  ) |&gt; \n  separate_wider_delim(expr_hit, delim = \":\", names = c(\"hit_chr\", \"hit_bp\")) |&gt; \n  mutate(log_hit_tss_distance = log10(abs(tss - as.numeric(hit_bp)))) |&gt; \n  ggplot(aes(h4_unif, h4_non_unif, col = log_hit_tss_distance)) + \n  geom_point() + \n  geom_segment(aes(xend = h4_unif, yend = h4_unif), color = \"grey\") +\n  geom_abline(col = \"grey\") + \n  labs(\n    x = \"H4: Uniform priors\", \n    y = \"H4: Non-uniform priors\",\n    col = \"TSS\\ndistance\"\n  ) + \n  theme_bw()\n\n\n\n\n\nmethod_comparison_data |&gt; \n  mutate(\n    h4_non_unif = max(h4_non_unif), \n    h4_unif = max(h4_unif)\n  ) |&gt; \n  separate_wider_delim(expr_hit, delim = \":\", names = c(\"hit_chr\", \"hit_bp\")) |&gt; \n  mutate(log_hit_tss_distance = log10(abs(tss - as.numeric(hit_bp)))) |&gt;\n  mutate(h4_diff = h4_unif - h4_non_unif) |&gt; \n  ggplot(aes(log_hit_tss_distance, h4_diff)) + \n  geom_point() + \n  theme_bw()\n\n\n\n\n\nmethod_comparison_data |&gt; \n  mutate(\n    h4_non_unif = max(h4_non_unif), \n    h4_unif = max(h4_unif)\n  ) |&gt; \n  mutate(margz_diff = abs(hit1.margz - hit2.margz)) |&gt; \n  mutate(h4_diff = h4_unif - h4_non_unif) |&gt; \n  ggplot(aes(margz_diff, h4_diff)) + \n  geom_point() + \n  theme_bw()\n\n\n\n\n\nmethod_comparison_data |&gt; \n  mutate(\n    h4_non_unif = max(h4_non_unif), \n    h4_unif = max(h4_unif)\n  ) |&gt; \n  filter(h4_unif &lt;= 0.6 & h4_non_unif &gt; 0.6)\n\n# A tibble: 2 × 12\n# Rowwise: \n  trait1   trait2 block    tss gene1 expr_hit hit1.margz hit2.margz coloc_unif  \n  &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt;  &lt;dbl&gt; &lt;lgl&gt; &lt;chr&gt;         &lt;dbl&gt;      &lt;dbl&gt; &lt;list&gt;      \n1 ASTCO_F… Schmi… chr2… 1.98e8 FALSE 2:19804…      -5.01     -11.5  &lt;named list&gt;\n2 Bossini… VIT_J… chr4… 1.01e8 TRUE  4:10144…      -8.15      -5.03 &lt;named list&gt;\n# ℹ 3 more variables: coloc_non_unif &lt;list&gt;, h4_unif &lt;dbl&gt;, h4_non_unif &lt;dbl&gt;\n\n\n\nmethod_comparison_data |&gt; \n  mutate(\n    h4_non_unif = max(h4_non_unif), \n    h4_unif = max(h4_unif)\n  ) |&gt;  \n  mutate(h4_diff = h4_unif - h4_non_unif) |&gt; \n  ggplot(aes(h4_diff)) + \n  geom_histogram(binwidth = 0.005)\n\n\n\n\n\nmethod_comparison_data |&gt; \n  mutate(\n    h4_non_unif = max(h4_non_unif), \n    h4_unif = max(h4_unif)\n  ) |&gt;  \n  mutate(h4_diff = h4_unif - h4_non_unif) |&gt; \n  mutate(abs_h4_diff = abs(h4_diff)) |&gt; \n  arrange(desc(abs_h4_diff)) |&gt; \n  select(trait1, trait2, h4_unif, h4_non_unif, block, expr_hit, gene1, tss)\n\n# A tibble: 117 × 8\n# Rowwise: \n   trait1                 trait2 h4_unif h4_non_unif block expr_hit gene1    tss\n   &lt;chr&gt;                  &lt;chr&gt;    &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;    &lt;lgl&gt;  &lt;dbl&gt;\n 1 CCL19_Zhao_37563310_1… GENCO…   0.805     0.416   chr3… 3:13254… FALSE 1.33e8\n 2 CD_DeLange_28067908_1… GTEx_…   0.283     0.110   chr2… 2:24877… FALSE 2.48e7\n 3 AITD_Saevarsdottir_32… Quach…   0.159     0.00121 chr3… 3:10615… FALSE 1.06e8\n 4 Schmiedel_2018_ge_CD8… UC_De…   0.413     0.262   chr2… 2:43579… TRUE  4.32e7\n 5 Alasoo_2018_ge_macrop… CD_De…   0.281     0.136   chr2… 2:24888… TRUE  2.49e7\n 6 Lepik_2017_ge_blood.E… UC_De…   0.240     0.368   chr2… 2:43235… TRUE  4.32e7\n 7 Bossini-Castillo_2019… VIT_J…   0.590     0.705   chr4… 4:10144… TRUE  1.01e8\n 8 Nedelec_2016_ge_macro… UC_De…   0.278     0.392   chr2… 2:43274… TRUE  4.32e7\n 9 Quach_2016_ge_monocyt… TWEAK…   0.691     0.798   chr3… 3:98687… TRUE  9.87e7\n10 ASTCO_Ferreira_309297… Schmi…   0.513     0.613   chr2… 2:19804… FALSE 1.98e8\n# ℹ 107 more rows\n\n\n\nsnps1 &lt;- colnames(BF[[\"chr2_block13\"]][[\"CD_DeLange_28067908_1-hg38.tsv.gz\"]])\nsnps2 &lt;- colnames(BF[[\"chr2_block13\"]][[\"GTEx_ge_blood.ENSG00000138092\"]])\nisnps &lt;- intersect(snps1, snps2)\nfilter(hg38_data, ensembl_gene_id == \"ENSG00000138092\")\n\n# A tibble: 1 × 2\n  ensembl_gene_id      tss\n  &lt;chr&gt;              &lt;dbl&gt;\n1 ENSG00000138092 24793445\n\nplot_bfs(BF[[\"chr2_block13\"]][[\"CD_DeLange_28067908_1-hg38.tsv.gz\"]], isnps, \n          tss = 24793445) + \n  plot_bfs(BF[[\"chr2_block13\"]][[\"GTEx_ge_blood.ENSG00000138092\"]], isnps) +\n  plot_bfs(BF[[\"chr2_block13\"]][[\"GTEx_ge_blood.ENSG00000138092\"]], isnps, \n          with_prior = TRUE) + \n  plot_bfs(BF[[\"chr2_block13\"]][[\"GTEx_ge_blood.ENSG00000138092\"]], isnps, \n          tss = 24793445, with_prior = TRUE) + \n  plot_bfs(BF[[\"chr2_block13\"]][[\"GTEx_ge_blood.ENSG00000138092\"]], isnps, \n          tss = 24900000, with_prior = TRUE) + \n  plot_bfs(BF[[\"chr2_block13\"]][[\"GTEx_ge_blood.ENSG00000138092\"]], isnps, \n          tss = 24877299, with_prior = TRUE)\n\n\n\nsum_bfs &lt;- as.matrix(\n  BF[[\"chr2_block13\"]][[\"CD_DeLange_28067908_1-hg38.tsv.gz\"]][, isnps] + \n  BF[[\"chr2_block13\"]][[\"GTEx_ge_blood.ENSG00000138092\"]][, isnps], \n) |&gt; \n  t()\n\nplot_bfs(BF[[\"chr2_block13\"]][[\"CD_DeLange_28067908_1-hg38.tsv.gz\"]], isnps) + \n  plot_bfs(BF[[\"chr2_block13\"]][[\"GTEx_ge_blood.ENSG00000138092\"]], isnps) + \n  plot_bfs(sum_bfs, isnps) + \n    geom_vline(xintercept = 24877299, colour = \"red\") + \n    geom_vline(xintercept = 24793445, colour = \"blue\")\n\n\n\n\n\ndevtools::load_all(\"~/coloc\")\n\nℹ Loading coloc\nThis is coloc version 6.0.0\n\ncoloc.bf_bf(\n  BF[[\"chr3_block79\"]][[\"CCL19_Zhao_37563310_1-hg38.tsv.gz\"]],\n  BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]],\n  tss2 = 132721707\n)\n\n[1]  0.00000 69.80057 16.34819 86.14734 85.80811\n\n\n$summary\n   nsnps        hit1        hit2   PP.H0.abf    PP.H1.abf    PP.H2.abf\n1:  4334 3:132481875 3:132548460 2.25477e-38 4.646287e-08 2.838116e-31\n   PP.H3.abf PP.H4.abf idx1 idx2\n1: 0.5840039  0.415996    1    1\n\n$results\n              snp SNP.PP.H4.abf\n   1: 3:132118426  8.629663e-45\n   2: 3:132118446  8.310292e-45\n   3: 3:132118614  9.514296e-45\n   4: 3:132118988  4.493891e-45\n   5: 3:132119156  8.550215e-45\n  ---                          \n4330: 3:133532332  2.345415e-44\n4331: 3:133532512  6.296131e-45\n4332: 3:133532565  2.300478e-45\n4333: 3:133532936  7.695754e-45\n4334: 3:133533254  5.370701e-45\n\n$priors\n   p1    p2   p12 \n1e-04 1e-04 5e-06 \n\ncoloc.bf_bf(\n  BF[[\"chr3_block79\"]][[\"CCL19_Zhao_37563310_1-hg38.tsv.gz\"]],\n  BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]],\n)\n\n$summary\n   nsnps        hit1        hit2    PP.H0.abf    PP.H1.abf   PP.H2.abf\n1:  4334 3:132481875 3:132548460 1.390379e-38 2.865081e-08 9.55052e-32\n   PP.H3.abf PP.H4.abf idx1 idx2\n1:  0.195193  0.804807    1    1\n\n$results\n              snp SNP.PP.H4.abf\n   1: 3:132118426  8.629663e-45\n   2: 3:132118446  8.310292e-45\n   3: 3:132118614  9.514296e-45\n   4: 3:132118988  4.493891e-45\n   5: 3:132119156  8.550215e-45\n  ---                          \n4330: 3:133532332  2.345415e-44\n4331: 3:133532512  6.296131e-45\n4332: 3:133532565  2.300478e-45\n4333: 3:133532936  7.695754e-45\n4334: 3:133533254  5.370701e-45\n\n$priors\n   p1    p2   p12 \n1e-04 1e-04 5e-06 \n\nsnps1 &lt;- colnames(BF[[\"chr3_block79\"]][[\"CCL19_Zhao_37563310_1-hg38.tsv.gz\"]])\nsnps2 &lt;- colnames(BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]])\nisnps &lt;- intersect(snps1, snps2)\nbps &lt;- vapply(strsplit(isnps, \":\"), \\(x) as.numeric(x[[2]]), numeric(1))\n\nind &lt;- seq(1, length(bps), by = 100)\nh4 &lt;- numeric(length(ind))\nh3 &lt;- numeric(length(ind))\nfor (i in seq_along(ind)) {\n  coloc_out &lt;- coloc.bf_bf(\n    BF[[\"chr3_block79\"]][[\"CCL19_Zhao_37563310_1-hg38.tsv.gz\"]],\n    BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]],\n    tss2 = bps[[ind[[i]]]]\n  )\n  h4[[i]] &lt;- coloc_out$summary[, \"PP.H4.abf\"][[1]]\n  h3[[i]] &lt;- coloc_out$summary[, \"PP.H3.abf\"][[1]]\n}\n\n[1]  0.000000 69.800573  9.740336 79.536644 80.296044\n[1]  0.00000 69.80057 10.44712 80.24619 79.96636\n[1]  0.00000 69.80057 11.77456 81.54494 84.27481\n[1]  0.00000 69.80057 12.65866 82.43425 84.97157\n[1]  0.00000 69.80057 12.95632 82.73476 85.14988\n[1]  0.00000 69.80057 13.85351 83.63457 85.92244\n[1]  0.00000 69.80057 14.09584 83.88106 85.92689\n[1]  0.00000 69.80057 14.48215 84.26733 86.31576\n[1]  0.00000 69.80057 14.67456 84.46071 86.44366\n[1]  0.00000 69.80057 14.88663 84.67220 86.69493\n[1]  0.00000 69.80057 15.24733 85.03225 87.09733\n[1]  0.00000 69.80057 16.64954 86.43367 88.54872\n[1]  0.00000 69.80057 17.87724 87.65481 90.10885\n[1]  0.00000 69.80057 17.97374 87.76883 88.78048\n[1]  0.00000 69.80057 17.82080 87.61905 87.77003\n[1]  0.00000 69.80057 17.67769 87.47710 86.93476\n[1]  0.00000 69.80057 16.45347 86.25275 85.82009\n[1]  0.00000 69.80057 15.15981 84.95839 84.95162\n[1]  0.00000 69.80057 14.43821 84.23812 83.14481\n[1]  0.00000 69.80057 13.94752 83.74791 81.35655\n[1]  0.00000 69.80057 13.57480 83.37522 80.79317\n[1]  0.00000 69.80057 13.02129 82.82179 79.59110\n[1]  0.00000 69.80057 12.63274 82.43320 79.51504\n[1]  0.00000 69.80057 12.00757 81.80795 79.45590\n[1]  0.00000 69.80057 11.43111 81.23136 79.39625\n[1]  0.00000 69.80057 10.88615 80.68610 79.51975\n[1]  0.00000 69.80057 10.58839 80.38807 79.59180\n[1]  0.000000 69.800573  9.650085 79.448278 79.623577\n[1]  0.000000 69.800573  8.522677 78.315039 79.731580\n[1]  0.000000 69.800573  8.422053 78.214415 79.630959\n[1]  0.00000 69.80057  8.53563 78.32799 79.74453\n[1]  0.000000 69.800573  8.704544 78.496905 79.913468\n[1]  0.000000 69.800573  8.614112 78.406473 79.823054\n[1]  0.000000 69.800573  8.606268 78.398629 79.815217\n[1]  0.000000 69.800573  8.582316 78.374677 79.791268\n[1]  0.000000 69.800573  8.586892 78.379253 79.795845\n[1]  0.000000 69.800573  8.527805 78.320166 79.736759\n[1]  0.00000 69.80057  8.60896 78.40132 79.81792\n[1]  0.000000 69.800573  8.537244 78.329605 79.746198\n[1]  0.000000 69.800573  8.545502 78.337863 79.754453\n[1]  0.000000 69.800573  8.403944 78.196305 79.612892\n[1]  0.000000 69.800573  8.619545 78.411906 79.828492\n[1]  0.000000 69.800573  8.741842 78.534203 79.950799\n[1]  0.000000 69.800573  8.951691 78.744052 80.160650\n\nh3_data &lt;- tibble(h3, tss = bps[ind])\n\nh3_data |&gt; \n  ggplot(aes(tss, h3)) + \n  geom_point() + \n  theme_bw()\n\n\n\nh4_data &lt;- tibble(h4, tss = bps[ind])\n\nh4_data |&gt; \n  ggplot(aes(tss, h4)) + \n  geom_point() + \n  theme_bw()\n\n\n\nlH3 &lt;- numeric(length(ind))\nlH4 &lt;- numeric(length(ind))\nH3 &lt;- numeric(length(ind))\nH4 &lt;- numeric(length(ind))\nrho &lt;- numeric(length(ind))\nfor (i in seq_along(ind)) {\n  p1_vec &lt;- rep(1e-4, length(isnps))\n  p2_vec &lt;- coloc:::calculate_non_uniform_p(bps, bps[[ind[[i]]]])\n  p12_vec &lt;- p1_vec * p2_vec * (1e-5 / (1e-4 * 1e-4))\n  l1 &lt;- BF[[\"chr3_block79\"]][[\"CCL19_Zhao_37563310_1-hg38.tsv.gz\"]][, isnps]\n  l2 &lt;- BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]][, isnps]\n  lsum &lt;- l1 + l2\n  lH3_abf &lt;- coloc:::logdiff(coloc:::logsum(log(p1_vec) + l1) +\n                             coloc:::logsum(log(p2_vec) + l2),\n                     coloc:::logsum(log(p1_vec) + log(p2_vec) + lsum))\n  lH4_abf &lt;- coloc:::logsum(log(p12_vec) + lsum)\n  rho[[i]] &lt;- cor(log(p12_vec), lsum) \n  lH3[[i]] &lt;- lH3_abf\n  lH4[[i]] &lt;- lH4_abf\n  H4[[i]] &lt;- exp(lH4[[i]] - coloc:::logsum(c(lH3[[i]], lH4[[i]])))\n  H3[[i]] &lt;- exp(lH3[[i]] - coloc:::logsum(c(lH3[[i]], lH4[[i]])))\n}\n\n\nhighlight_tss &lt;- c(132486727, 132535246, 132590143, 132649677)\ntibble(tss = bps[ind], lH3) |&gt; \n  mutate(highlight = tss %in% highlight_tss) |&gt; \n  ggplot(aes(tss, lH3, col = highlight)) + \n  geom_point() + \n  coord_cartesian(ylim = c(83, 95)) + \ntibble(tss = bps[ind], lH4) |&gt; \n  mutate(highlight = tss %in% highlight_tss) |&gt; \n  ggplot(aes(tss, lH4, col = highlight)) + \n  geom_point() + \n  coord_cartesian(ylim = c(83, 95)) + \ntibble(tss = bps[ind], H4) |&gt; \n  mutate(highlight = tss %in% highlight_tss) |&gt; \n  ggplot(aes(tss, H4, col = highlight)) + \n  geom_point() + \n  plot_layout(guides = \"collect\")\n\n\n\ntibble(tss = bps[ind], rho) |&gt; \n  mutate(highlight = tss %in% highlight_tss) |&gt; \n  ggplot(aes(tss, rho, col = highlight)) + \n  geom_point() + \n  plot_layout(guides = \"collect\")\n\n\n\nsum_bfs &lt;- as.matrix(\n  BF[[\"chr3_block79\"]][[\"CCL19_Zhao_37563310_1-hg38.tsv.gz\"]][, isnps] + \n  BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]][, isnps], \n) |&gt; \n  t()\n\nplot_bfs(BF[[\"chr3_block79\"]][[\"CCL19_Zhao_37563310_1-hg38.tsv.gz\"]], isnps) + \n  geom_vline(aes(xintercept = tss, colour = h4), h4_data, linewidth = 1) + \n  scale_color_distiller(palette = 1, direction = 1, type = \"div\") + \n  plot_bfs(BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]], isnps) + \n  geom_vline(aes(xintercept = tss, colour = h4), h4_data, linewidth = 1) + \n  scale_color_distiller(palette = 1, direction = 1, type = \"div\") + \n  plot_bfs(sum_bfs, isnps) + \n  geom_vline(aes(xintercept = tss, colour = h4), h4_data, linewidth = 1) + \n  scale_color_distiller(palette = 1, direction = 1, type = \"div\") + \n  plot_layout(guides = \"collect\")\n\n\n\ntibble(bf = sum_bfs[1, ], bps = bps) |&gt; \n  mutate(g = rep(seq(1, n(), by = 100), each = 100, length.out = n())) |&gt; \n  summarise(bf = mean(bf), bps = median(bps), .by = g) |&gt; \n  ggplot(aes(bps, bf)) + \n  geom_point()\n\n\n\n\n\nx &lt;- seq(0.05, 0.95, by = 0.05)\ny &lt;- 0.5\nplot(x, x / (x + y))\n\n\n\n\n\ndevtools::load_all(\"~/coloc\")\n\nℹ Loading coloc\nThis is coloc version 6.0.0\n\ncoloc.bf_bf(\n  BF[[\"chr2_block13\"]][[\"CD_DeLange_28067908_1-hg38.tsv.gz\"]],\n  BF[[\"chr2_block13\"]][[\"GTEx_ge_blood.ENSG00000138092\"]],\n  tss2 = 24793445\n)\n\n[1]  0.00000 13.85114 12.24812 26.09901 24.01215\n\n\n$summary\n   nsnps       hit1       hit2    PP.H0.abf    PP.H1.abf    PP.H2.abf PP.H3.abf\n1:  2849 2:24938367 2:24877298 4.116654e-12 4.265974e-06 8.586896e-07 0.8896154\n   PP.H4.abf idx1 idx2\n1: 0.1103795    1    1\n\n$results\n             snp SNP.PP.H4.abf\n   1: 2:24464173  2.059807e-18\n   2: 2:24464227  3.235817e-18\n   3: 2:24464430  1.146734e-17\n   4: 2:24464788  6.512652e-17\n   5: 2:24465186  1.771346e-16\n  ---                         \n2845: 2:25791210  2.314571e-18\n2846: 2:25791445  1.811371e-17\n2847: 2:25791483  8.445464e-18\n2848: 2:25792775  7.180295e-18\n2849: 2:25792886  9.785211e-18\n\n$priors\n   p1    p2   p12 \n1e-04 1e-04 5e-06 \n\ncoloc.bf_bf(\n  BF[[\"chr2_block13\"]][[\"CD_DeLange_28067908_1-hg38.tsv.gz\"]],\n  BF[[\"chr2_block13\"]][[\"GTEx_ge_blood.ENSG00000138092\"]],\n  tss2 = 24877299\n)$summary[, \"PP.H4.abf\"]\n\n[1]  0.00000 13.85114 14.51656 28.36759 25.39527\n\n\n    PP.H4.abf\n1: 0.04869198\n\nsnps1 &lt;- colnames(BF[[\"chr2_block13\"]][[\"CD_DeLange_28067908_1-hg38.tsv.gz\"]])\nsnps2 &lt;- colnames(BF[[\"chr2_block13\"]][[\"GTEx_ge_blood.ENSG00000138092\"]])\nisnps &lt;- intersect(snps1, snps2)\nbps &lt;- vapply(strsplit(isnps, \":\"), \\(x) as.numeric(x[[2]]), numeric(1))\n\nind &lt;- seq(1, length(bps), by = 100)\nh4 &lt;- numeric(length(ind))\nfor (i in seq_along(ind)) {\n  h4[[i]] &lt;- coloc.bf_bf(\n    BF[[\"chr2_block13\"]][[\"CD_DeLange_28067908_1-hg38.tsv.gz\"]],\n    BF[[\"chr2_block13\"]][[\"GTEx_ge_blood.ENSG00000138092\"]],\n    tss2 = bps[[ind[[i]]]]\n  )$summary[, \"PP.H4.abf\"][[1]]\n}\n\n[1]  0.000000 13.851140  5.246136 19.096490 18.162873\n[1]  0.000000 13.851140  4.827003 18.677359 17.741980\n[1]  0.000000 13.851140  4.766937 18.617294 17.679866\n[1]  0.00000 13.85114 10.02287 23.87400 18.37687\n[1]  0.00000 13.85114 10.64133 24.49231 21.93479\n[1]  0.00000 13.85114 11.00390 24.85464 23.24417\n[1]  0.00000 13.85114 11.47244 25.32319 23.67838\n[1]  0.00000 13.85114 12.13869 25.98954 24.06170\n[1]  0.00000 13.85114 12.69013 26.54104 24.37365\n[1]  0.00000 13.85114 13.38559 27.23656 24.78228\n[1]  0.00000 13.85114 14.51138 28.36242 25.39583\n[1]  0.00000 13.85114 13.51741 27.36810 25.86155\n[1]  0.00000 13.85114 13.14113 26.99053 26.84939\n[1]  0.00000 13.85114 12.48992 26.33751 26.91169\n[1]  0.00000 13.85114 11.66910 25.51717 25.94907\n[1]  0.00000 13.85114 11.47280 25.32152 25.51381\n[1]  0.00000 13.85114 10.76922 24.61863 24.47454\n[1]  0.00000 13.85114 10.10214 23.95140 23.89215\n[1]  0.000000 13.851140  8.209816 22.051867 23.570411\n[1]  0.000000 13.851140  6.838555 20.683923 21.746784\n[1]  0.000000 13.851140  6.189609 20.037271 20.592484\n[1]  0.000000 13.851140  5.100927 18.950491 18.713109\n[1]  0.000000 13.851140  5.031288 18.881641 17.949567\n[1]  0.000000 13.851140  5.262667 19.113020 18.181340\n[1]  0.000000 13.851140  5.464444 19.314796 18.383339\n[1]  0.000000 13.851140  4.915624 18.765977 17.834342\n[1]  0.00000 13.85114  4.80967 18.66002 17.72833\n[1]  0.000000 13.851140  4.935689 18.786042 17.854312\n[1]  0.00000 13.85114  5.00522 18.85557 17.92387\n\nh4_data &lt;- tibble(h4, tss = bps[ind])\n\nh4_data |&gt; \n  ggplot(aes(tss, h4)) + \n  geom_point() + \n  theme_bw()\n\n\n\n\nLower Pr(H4) with the non-uniform priors.\n\nsnps1 &lt;- colnames(BF[[\"chr3_block79\"]][[\"CCL19_Zhao_37563310_1-hg38.tsv.gz\"]])\nsnps2 &lt;- colnames(BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]])\nisnps &lt;- intersect(snps1, snps2)\nhg38_data |&gt; \n  filter(ensembl_gene_id == \"ENSG00000113971\")\n\n# A tibble: 1 × 2\n  ensembl_gene_id       tss\n  &lt;chr&gt;               &lt;dbl&gt;\n1 ENSG00000113971 132721707\n\nplot_bfs(BF[[\"chr3_block79\"]][[\"CCL19_Zhao_37563310_1-hg38.tsv.gz\"]], isnps) + \n plot_bfs(BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]], isnps, \n          tss = 132721707) + \n plot_bfs(BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]], isnps, \n          tss = 132721707, with_prior = TRUE)\n\n\n\nplot_bfs(BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]], isnps, \n          tss = 132721707) + \n plot_bfs(BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]], isnps, \n          tss = 132721707, with_prior = TRUE) + \n plot_bfs(BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]], isnps, \n          with_prior = TRUE)  \n\n\n\n\n\ncoloc.bf_bf(\n  BF[[\"chr3_block79\"]][[\"CCL19_Zhao_37563310_1-hg38.tsv.gz\"]],\n  BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]]\n)\n\n$summary\n   nsnps        hit1        hit2    PP.H0.abf    PP.H1.abf   PP.H2.abf\n1:  4334 3:132481875 3:132548460 1.390379e-38 2.865081e-08 9.55052e-32\n   PP.H3.abf PP.H4.abf idx1 idx2\n1:  0.195193  0.804807    1    1\n\n$results\n              snp SNP.PP.H4.abf\n   1: 3:132118426  8.629663e-45\n   2: 3:132118446  8.310292e-45\n   3: 3:132118614  9.514296e-45\n   4: 3:132118988  4.493891e-45\n   5: 3:132119156  8.550215e-45\n  ---                          \n4330: 3:133532332  2.345415e-44\n4331: 3:133532512  6.296131e-45\n4332: 3:133532565  2.300478e-45\n4333: 3:133532936  7.695754e-45\n4334: 3:133533254  5.370701e-45\n\n$priors\n   p1    p2   p12 \n1e-04 1e-04 5e-06 \n\ncoloc.bf_bf(\n  BF[[\"chr3_block79\"]][[\"CCL19_Zhao_37563310_1-hg38.tsv.gz\"]],\n  BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]],\n  tss2 = 132721707\n) \n\n[1]  0.00000 69.80057 16.34819 86.14734 85.80811\n\n\n$summary\n   nsnps        hit1        hit2   PP.H0.abf    PP.H1.abf    PP.H2.abf\n1:  4334 3:132481875 3:132548460 2.25477e-38 4.646287e-08 2.838116e-31\n   PP.H3.abf PP.H4.abf idx1 idx2\n1: 0.5840039  0.415996    1    1\n\n$results\n              snp SNP.PP.H4.abf\n   1: 3:132118426  8.629663e-45\n   2: 3:132118446  8.310292e-45\n   3: 3:132118614  9.514296e-45\n   4: 3:132118988  4.493891e-45\n   5: 3:132119156  8.550215e-45\n  ---                          \n4330: 3:133532332  2.345415e-44\n4331: 3:133532512  6.296131e-45\n4332: 3:133532565  2.300478e-45\n4333: 3:133532936  7.695754e-45\n4334: 3:133533254  5.370701e-45\n\n$priors\n   p1    p2   p12 \n1e-04 1e-04 5e-06 \n\ncoloc.bf_bf(\n  BF[[\"chr3_block79\"]][[\"CCL19_Zhao_37563310_1-hg38.tsv.gz\"]],\n  BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]],\n  tss2 = 132500000\n) \n\n[1]  0.00000 69.80057 17.96071 87.74686 89.72975\n\n\n$summary\n   nsnps        hit1        hit2   PP.H0.abf    PP.H1.abf    PP.H2.abf\n1:  4334 3:132481875 3:132548460 9.43735e-40 1.944706e-09 5.957796e-32\n   PP.H3.abf PP.H4.abf idx1 idx2\n1: 0.1210112 0.8789888    1    1\n\n$results\n              snp SNP.PP.H4.abf\n   1: 3:132118426  8.629663e-45\n   2: 3:132118446  8.310292e-45\n   3: 3:132118614  9.514296e-45\n   4: 3:132118988  4.493891e-45\n   5: 3:132119156  8.550215e-45\n  ---                          \n4330: 3:133532332  2.345415e-44\n4331: 3:133532512  6.296131e-45\n4332: 3:133532565  2.300478e-45\n4333: 3:133532936  7.695754e-45\n4334: 3:133533254  5.370701e-45\n\n$priors\n   p1    p2   p12 \n1e-04 1e-04 5e-06 \n\n\nHigher Pr(H4) with the non-uniform priors.\n\nsnps1 &lt;- colnames(BF[[\"chr2_block25\"]][[\"Lepik_2017_ge_blood.ENSG00000234936\"]])\nsnps2 &lt;- colnames(BF[[\"chr2_block25\"]][[\"UC_DeLange_28067908_1-hg38.tsv.gz\"]])\nisnps &lt;- intersect(snps1, snps2)\nhg38_data |&gt; \n  filter(ensembl_gene_id == \"ENSG00000234936\")\n\n# A tibble: 1 × 2\n  ensembl_gene_id      tss\n  &lt;chr&gt;              &lt;dbl&gt;\n1 ENSG00000234936 43229573\n\nplot_bfs(BF[[\"chr2_block25\"]][[\"Lepik_2017_ge_blood.ENSG00000234936\"]], isnps) + \n plot_bfs(BF[[\"chr2_block25\"]][[\"UC_DeLange_28067908_1-hg38.tsv.gz\"]], isnps, \n          tss = 43229573) + \n plot_bfs(BF[[\"chr2_block25\"]][[\"UC_DeLange_28067908_1-hg38.tsv.gz\"]], isnps, \n          tss = 43229573, with_prior = TRUE)\n\n\n\ncoloc.bf_bf(\n  BF[[\"chr2_block25\"]][[\"Lepik_2017_ge_blood.ENSG00000234936\"]],\n  BF[[\"chr2_block25\"]][[\"UC_DeLange_28067908_1-hg38.tsv.gz\"]],\n  tss2 = 43229573\n)\n\n[1]  0.000000  9.511969  2.097547 11.599173 13.247492\n\n\n$summary\n   nsnps       hit1       hit2    PP.H0.abf  PP.H1.abf    PP.H2.abf PP.H3.abf\n1:  3178 2:43235339 2:43414488 1.450991e-06 0.01961824 1.182001e-05 0.1581691\n   PP.H4.abf idx1 idx2\n1: 0.8221994    1    1\n\n$results\n             snp SNP.PP.H4.abf\n   1: 2:43083344  7.933419e-12\n   2: 2:43084104  1.492962e-11\n   3: 2:43084421  6.957436e-11\n   4: 2:43085497  1.379446e-11\n   5: 2:43085671  6.344360e-12\n  ---                         \n3174: 2:44086053  2.639381e-11\n3175: 2:44086086  2.532391e-11\n3176: 2:44086248  6.257888e-12\n3177: 2:44086401  8.770713e-11\n3178: 2:44086664  1.059344e-11\n\n$priors\n   p1    p2   p12 \n1e-04 1e-04 5e-06 \n\n\nNo change, high Pr(H4)\n\nsnps1 &lt;- colnames(BF[[\"chr2_block130\"]][[\"GENCORD_ge_T-cell.ENSG00000115009\"]])\nsnps2 &lt;- colnames(BF[[\"chr2_block130\"]][[\"ASTCO_Ferreira_30929738_1-hg38.tsv.gz\"]])\nisnps &lt;- intersect(snps1, snps2)\nhg38_data |&gt; \n  filter(ensembl_gene_id == \"ENSG00000115009\")\n\n# A tibble: 1 × 2\n  ensembl_gene_id        tss\n  &lt;chr&gt;                &lt;dbl&gt;\n1 ENSG00000115009 227813842.\n\nplot_bfs(BF[[\"chr2_block130\"]][[\"GENCORD_ge_T-cell.ENSG00000115009\"]], isnps, \n         tss = 227813842) + \n plot_bfs(BF[[\"chr2_block130\"]][[\"ASTCO_Ferreira_30929738_1-hg38.tsv.gz\"]], isnps, \n          tss = 227813842) + \n plot_bfs(BF[[\"chr2_block130\"]][[\"ASTCO_Ferreira_30929738_1-hg38.tsv.gz\"]], isnps, \n          tss = 227813842, with_prior = TRUE)  \n\n\n\ncoloc.bf_bf(\n  BF[[\"chr2_block130\"]][[\"ASTCO_Ferreira_30929738_1-hg38.tsv.gz\"]],\n  BF[[\"chr2_block130\"]][[\"GENCORD_ge_T-cell.ENSG00000115009\"]], \n)\n\n$summary\n   nsnps        hit1        hit2    PP.H0.abf    PP.H1.abf    PP.H2.abf\n1:  4740 2:227805721 2:227805859 7.717351e-34 1.165810e-23 3.990357e-13\n2:  4740 2:227887158 2:227805859 3.630766e-24 1.930336e-21 1.877335e-03\n     PP.H3.abf    PP.H4.abf idx1 idx2\n1: 0.004036047 9.959640e-01    1    1\n2: 0.998105112 1.755304e-05    2    1\n\n$results\n              snp SNP.PP.H4.row1 SNP.PP.H4.row2\n   1: 2:227255202   5.168946e-41   1.841991e-26\n   2: 2:227255590   2.176152e-40   7.074883e-26\n   3: 2:227255715   7.856732e-40   3.204067e-25\n   4: 2:227256084   1.021424e-40   8.640170e-26\n   5: 2:227256385   1.061989e-38   5.376830e-25\n  ---                                          \n4736: 2:228505642   6.660958e-41   2.373914e-26\n4737: 2:228505810   4.590501e-41   2.082161e-26\n4738: 2:228505829   6.031528e-41   2.368550e-26\n4739: 2:228505851   5.050344e-41   1.859417e-26\n4740: 2:228506071   4.461520e-40   1.666774e-25\n\n$priors\n   p1    p2   p12 \n1e-04 1e-04 5e-06 \n\ncoloc.bf_bf(\n  BF[[\"chr2_block130\"]][[\"ASTCO_Ferreira_30929738_1-hg38.tsv.gz\"]],\n  BF[[\"chr2_block130\"]][[\"GENCORD_ge_T-cell.ENSG00000115009\"]], \n  tss2 = 227813842\n)\n\n[1]  0.00000 23.43838 50.51826 73.55436 79.06624\n[1]  0.000000  6.276006 50.518259 56.794265 45.845926\n\n\n$summary\n   nsnps        hit1        hit2    PP.H0.abf    PP.H1.abf    PP.H2.abf\n1:  4740 2:227805721 2:227805859 4.573195e-35 6.908431e-25 3.981263e-13\n2:  4740 2:227887158 2:227805859 2.156456e-25 1.146503e-22 1.877335e-03\n     PP.H3.abf    PP.H4.abf idx1 idx2\n1: 0.004022282 9.959777e-01    1    1\n2: 0.998105111 1.755388e-05    2    1\n\n$results\n              snp SNP.PP.H4.row1 SNP.PP.H4.row2\n   1: 2:227255202   5.168946e-41   1.841991e-26\n   2: 2:227255590   2.176152e-40   7.074883e-26\n   3: 2:227255715   7.856732e-40   3.204067e-25\n   4: 2:227256084   1.021424e-40   8.640170e-26\n   5: 2:227256385   1.061989e-38   5.376830e-25\n  ---                                          \n4736: 2:228505642   6.660958e-41   2.373914e-26\n4737: 2:228505810   4.590501e-41   2.082161e-26\n4738: 2:228505829   6.031528e-41   2.368550e-26\n4739: 2:228505851   5.050344e-41   1.859417e-26\n4740: 2:228506071   4.461520e-40   1.666774e-25\n\n$priors\n   p1    p2   p12 \n1e-04 1e-04 5e-06 \n\ncoloc.bf_bf(\n  BF[[\"chr2_block130\"]][[\"ASTCO_Ferreira_30929738_1-hg38.tsv.gz\"]],\n  BF[[\"chr2_block130\"]][[\"GENCORD_ge_T-cell.ENSG00000115009\"]], \n  tss2 = 227500000\n)\n\n[1]  0.00000 23.43838 40.42150 63.45874 68.96718\n[1]  0.000000  6.276006 40.421502 46.697507 35.749121\n\n\n$summary\n   nsnps        hit1        hit2    PP.H0.abf    PP.H1.abf    PP.H2.abf\n1:  4740 2:227805721 2:227805859 1.112184e-30 1.680105e-20 3.990357e-13\n2:  4740 2:227887158 2:227805859 5.232469e-21 2.781898e-18 1.877335e-03\n     PP.H3.abf    PP.H4.abf idx1 idx2\n1: 0.004036047 9.959640e-01    1    1\n2: 0.998105112 1.755304e-05    2    1\n\n$results\n              snp SNP.PP.H4.row1 SNP.PP.H4.row2\n   1: 2:227255202   5.168946e-41   1.841991e-26\n   2: 2:227255590   2.176152e-40   7.074883e-26\n   3: 2:227255715   7.856732e-40   3.204067e-25\n   4: 2:227256084   1.021424e-40   8.640170e-26\n   5: 2:227256385   1.061989e-38   5.376830e-25\n  ---                                          \n4736: 2:228505642   6.660958e-41   2.373914e-26\n4737: 2:228505810   4.590501e-41   2.082161e-26\n4738: 2:228505829   6.031528e-41   2.368550e-26\n4739: 2:228505851   5.050344e-41   1.859417e-26\n4740: 2:228506071   4.461520e-40   1.666774e-25\n\n$priors\n   p1    p2   p12 \n1e-04 1e-04 5e-06 \n\n\nQ: How to you make the ultimate colocalisation? Is the ‘sharpness’ of the peak important?\n\nsnps1 &lt;- colnames(BF[[\"chr3_block79\"]][[\"CCL19_Zhao_37563310_1-hg38.tsv.gz\"]])\nsnps2 &lt;- colnames(BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]])\nisnps &lt;- intersect(snps1, snps2)\nplot_bfs(BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]], isnps, \n         tss = 132721707, with_prior = TRUE)  \n\n\n\ntss &lt;- 132721707\nsnps &lt;- isnps\nbfs &lt;- BF[[\"chr3_block79\"]][[\"GENCORD_ge_fibroblast.ENSG00000113971\"]]\n\nbfs &lt;- bfs[1, snps]\nbps &lt;- vapply(strsplit(snps, \":\"), \\(x) as.numeric(x[[2]]), numeric(1))\n  \nprior_vec &lt;- 10^-4 * length(bps) * coloc:::calculate_non_uniform_p(bps, tss)\nplot(prior_vec)\n\n\n\nplot(log(prior_vec))\n\n\n\n\n\n# eqtlgen_data &lt;- readRDS(here::here(\"data\", \"processed-data\", \"eqtlgen.rds\"))\n# \n# eqtlgen_data\n# \n# x &lt;- eqtlgen_data |&gt; \n#   filter(abs_tss_distance &lt;= 300000) |&gt;\n#   filter(tss_distance &gt; 0) |&gt; \n#   pull(tss_distance)\n# x &lt;- c(x, -x)\n# \n# # Setting cut = 0, ensures there is not a very large drop of density at the end \n# # of the  interval.\n# dens &lt;- density(x, bw = \"SJ\", cut = 0)\n#   \n# dens_data &lt;- tibble(x = dens$x, y = dens$y / 2)\n# \n# dens_data |&gt; \n#   ggplot(aes(x, y)) + \n#   geom_point()\n# \n# dens_data |&gt; \n#   ggplot(aes(x, log(y))) + \n#   geom_point()\n# \n# saveRDS(dens_data, here::here(\"output\", \"data\", \"density.rds\"))"
  },
  {
    "objectID": "eqtl-tss-distance-analysis.html",
    "href": "eqtl-tss-distance-analysis.html",
    "title": "eQTL distribution analysis",
    "section": "",
    "text": "library(readr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(tools)\nlibrary(forcats)\nlibrary(janitor)\nlibrary(ggupset)\nlibrary(purrr)\nlibrary(dplyr, warn.conflicts = FALSE)\n\nsource(here::here(\"code\", \"plot-utils.R\"))\n\nconflicted::conflict_prefer(\"select\", \"dplyr\")\nconflicted::conflict_prefer(\"filter\", \"dplyr\")\neqtl_catalogue_data &lt;- readRDS(here::here(\"data\", \"processed-data\", \"eqtl-catalogue.rds\"))\ngtex_data &lt;- readRDS(here::here(\"data\", \"processed-data\", \"gtex.rds\"))\nadipos_express_marignal_data &lt;- readRDS(here::here(\"data\", \"processed-data\", \"adipos-express-marginal.rds\"))\neqtlgen_data &lt;- readRDS(here::here(\"data\", \"processed-data\", \"eqtlgen.rds\"))\nonek1k_data &lt;- readRDS(here::here(\"data\", \"processed-data\", \"onek1k.rds\"))"
  },
  {
    "objectID": "eqtl-tss-distance-analysis.html#eqtl-catalouge",
    "href": "eqtl-tss-distance-analysis.html#eqtl-catalouge",
    "title": "eQTL distribution analysis",
    "section": "eQTL catalouge",
    "text": "eQTL catalouge\n\neqtl_catalogue_data |&gt;\n  mutate(abs_tss_distance = log10(abs_tss_distance)) |&gt; \n  ggplot(aes(file, abs_tss_distance, fill = study_label)) +\n  geom_boxplot(outlier.alpha = 0.1) +\n  coord_flip() +\n  labs(\n    x = \"eQTL catalogue datasets\",\n    y = \"Distance from the TSS (bp)\",\n    fill = \"Study\"\n  ) +\n  theme_jp_vgrid() + \n  theme(axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        legend.position = \"right\", \n        legend.text = element_text(size = 14))\n\nWarning: Removed 18 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\neqtl_catalogue_data |&gt;\n  mutate(abs_tss_distance = log10(abs_tss_distance)) |&gt; \n  summarise(abs_tss_distance = median(abs_tss_distance), \n            .by = c(file, sample_size, study_label)) |&gt;\n  ggplot(aes(sample_size, abs_tss_distance, colour = study_label)) +\n  geom_point(size = 3) +\n  labs(\n    x = \"Study sample size\",\n    y = \"Median distance to TSS\", \n    colour = \"Study\"\n  ) +\n  theme_jp() + \n  theme(axis.text = element_text(size = 10), \n        legend.position = \"right\", \n        legend.text = element_text(size = 14))"
  },
  {
    "objectID": "eqtl-tss-distance-analysis.html#gtex",
    "href": "eqtl-tss-distance-analysis.html#gtex",
    "title": "eQTL distribution analysis",
    "section": "GTEx",
    "text": "GTEx\n\ngtex_data |&gt;\n  mutate(tissue = fct_rev(factor(tissue))) |&gt;\n  mutate(abs_tss_distance = log10(abs_tss_distance)) |&gt;  \n  ggplot(aes(tissue, abs_tss_distance)) +\n  geom_boxplot(fill = \"grey\", outlier.alpha = 0.1) +\n  labs(\n    x = \"Tissue\",\n    y = \"Distance to TSS\"\n  ) +\n  coord_flip() +\n  theme_jp_vgrid() + \n  theme(axis.text = element_text(size = 8))\n\nWarning: Removed 56 rows containing non-finite values (`stat_boxplot()`)."
  },
  {
    "objectID": "eqtl-tss-distance-analysis.html#adipoexpress-marginal",
    "href": "eqtl-tss-distance-analysis.html#adipoexpress-marginal",
    "title": "eQTL distribution analysis",
    "section": "AdipoExpress marginal",
    "text": "AdipoExpress marginal\n\nadipos_express_marignal_data |&gt; \n  ggplot(aes(file, abs_tss_distance)) +\n  geom_boxplot(fill = \"grey\", outlier.alpha = 0.1) +\n  labs(\n    x = \"Chromosome\",\n    y = \"Distance to TSS\"\n  ) +\n  coord_flip() +\n  theme_bw()"
  },
  {
    "objectID": "eqtl-tss-distance-analysis.html#onek1k",
    "href": "eqtl-tss-distance-analysis.html#onek1k",
    "title": "eQTL distribution analysis",
    "section": "Onek1k",
    "text": "Onek1k\n\nBy combination of cell types\n\ncombination_onek1k_data &lt;- onek1k_data |&gt; \n  summarise(cell_type_collapsed = paste0(sort(unlist(cell_type)), collapse=\"-\"),\n            .by = c(gene_id, abs_tss_distance, round))\n\nmost_common_cell_types &lt;- combination_onek1k_data |&gt; \n  count(cell_type_collapsed) |&gt; \n  arrange(desc(n)) |&gt; \n  slice_head(n = 30) |&gt; \n  pull(cell_type_collapsed)\n\nsingle_cell_types &lt;- keep(most_common_cell_types, \n                          \\(x) !grepl(\"-\", x, fixed = TRUE))\n\ncombination_onek1k_data |&gt; \n  mutate(abs_tss_distance = log10(abs_tss_distance)) |&gt; \n  filter(cell_type_collapsed %in% most_common_cell_types) |&gt; \n  mutate(cell_type_collapsed = fct_reorder(\n    factor(cell_type_collapsed), \n    abs_tss_distance, \n    .desc = TRUE)\n  ) |&gt; \n  ggplot(aes(x = cell_type_collapsed, y = abs_tss_distance)) +\n  geom_boxplot() + \n  axis_combmatrix(sep = \"-\", levels = single_cell_types) + \n  labs(\n    x = \"\", \n    y = \"log(10) abs tss distance\"\n  ) + \n  theme_jp() + \n  theme(axis.text = element_text(size = 12), \n        axis.title.y = element_text(vjust=-30))\n\nWarning: Removed 1 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\n\nBy individual cell type\n\nonek1k_data |&gt; \n  filter(n_cell_types == 1) |&gt; \n  mutate(cell_type = unlist(cell_type)) |&gt; \n  mutate(abs_tss_distance = log10(abs_tss_distance)) |&gt;\n  mutate(cell_type = fct_reorder(factor(cell_type), abs_tss_distance)) |&gt; \n  ggplot(aes(cell_type, abs_tss_distance)) + \n  geom_boxplot() + \n  coord_flip() + \n  labs(\n    y = \"Distance\", \n    x = \"Cell type\"\n  ) +\n  theme_jp_vgrid() + \n  theme(axis.text = element_text(size = 10))\n\n\n\n\n\n\nBy number of cell types for eQTL\n\nonek1k_data |&gt; \n  mutate(abs_tss_distance = log10(abs_tss_distance)) |&gt;\n  ggplot(aes(factor(n_cell_types), abs_tss_distance)) +\n  geom_boxplot(outlier.alpha = 0.1) +\n  labs(\n    x = \"Number of cell types with eQTL\",\n    y = \"Distance of eQTL SNP to eGene TSS (log10 bp)\",\n  ) +\n  theme_jp()\n\nWarning: Removed 1 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\nonek1k_data |&gt; \n  ggplot(aes(factor(n_cell_types))) +\n  geom_bar() +\n  labs(\n    x = \"Number of cell types with eQTL\",\n    y = \"Number of eQTL-eGene pairs\",\n  ) +\n  theme_jp()\n\n\n\n\n\n\nBy round of conditional analysis\n\nonek1k_data |&gt; \n  mutate(abs_tss_distance = log10(abs_tss_distance)) |&gt; \n  ggplot(aes(factor(round), abs_tss_distance)) +\n  geom_boxplot(fill = \"grey\", outlier.alpha = 0.1) +\n  labs(\n    x = \"Round of conditional analysis\",\n    y = \"Distance of eQTL variant to eGene TSS (log10 bp)\",\n  ) +\n  theme_jp()\n\nWarning: Removed 1 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\nonek1k_data |&gt; \n  ggplot(aes(factor(round))) +\n  geom_bar() +\n  labs(\n    x = \"Round\",\n    y = \"Number of eQTL-eGene pairs\",\n  ) +\n  theme_jp()"
  },
  {
    "objectID": "eqtl-tss-distance-analysis.html#across-studies",
    "href": "eqtl-tss-distance-analysis.html#across-studies",
    "title": "eQTL distribution analysis",
    "section": "Across studies",
    "text": "Across studies\n\nbind_rows(\n  gtex_data |&gt;\n    select(abs_tss_distance) |&gt;\n    mutate(study = \"GTX v8\"),\n  eqtlgen_data |&gt;\n    select(abs_tss_distance) |&gt;\n    mutate(study = \"eQTLGen\"),\n  eqtl_catalogue_data |&gt;\n    select(abs_tss_distance) |&gt;\n    mutate(study = \"eQTL Catalogue\"),\n  adipos_express_marignal_data |&gt; \n    select(abs_tss_distance) |&gt; \n    mutate(study = \"AdiposExpress\\n (Marginal)\"),\n  onek1k_data |&gt; \n    filter(round == 1) |&gt;\n    select(abs_tss_distance) |&gt; \n    mutate(study = \"OneK1K\")\n) |&gt;\n  mutate(log10_abs_tss_distance = log10(abs_tss_distance)) |&gt; \n  ggplot(aes(study, log10_abs_tss_distance)) +\n  geom_violin(fill = \"grey\") +\n  geom_boxplot(outlier.alpha = 0.1) +\n  labs(\n    x = \"Study\",\n    y = \"Absolute Log(10) distance from variant to TSS\",\n  ) +\n  coord_flip() +\n  theme_jp_vgrid()\n\nWarning: Removed 76 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 76 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\nonek1k_data\n\n# A tibble: 6,749 × 9\n   gene_id         tss_distance round cell_type_collapsed cell_type n_cell_types\n   &lt;chr&gt;                  &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;               &lt;list&gt;           &lt;int&gt;\n 1 ENSG00000001561      -30457      1 Natural Killer Cell &lt;chr [1]&gt;            1\n 2 ENSG00000001561      731144      2 Dendritic Cell      &lt;chr [1]&gt;            1\n 3 ENSG00000002549       -6032.     1 Classic Monocyte    &lt;chr [1]&gt;            1\n 4 ENSG00000002549        5396.     1 Non-classic Monocy… &lt;chr [1]&gt;            1\n 5 ENSG00000002822     -307020      1 CD8 Effector memory &lt;chr [1]&gt;            1\n 6 ENSG00000002822     -243222      1 Non-classic Monocy… &lt;chr [1]&gt;            1\n 7 ENSG00000002822     -195349      1 Natural Killer Cell &lt;chr [1]&gt;            1\n 8 ENSG00000002919      -32379      1 CD8 Effector memory &lt;chr [1]&gt;            1\n 9 ENSG00000002933      -21895      1 Non-classic Monocy… &lt;chr [1]&gt;            1\n10 ENSG00000002933      -21895      2 Dendritic Cell      &lt;chr [1]&gt;            1\n# ℹ 6,739 more rows\n# ℹ 3 more variables: abs_tss_distance &lt;dbl&gt;, log10_tss_distance &lt;dbl&gt;,\n#   log10_abs_tss_distance &lt;dbl&gt;\n\nonek1k_data |&gt; \n  filter(abs(tss_distance) &lt;= 150000) |&gt; \n  ggplot(aes(tss_distance)) + \n  geom_density(bw = \"SJ\") + \n  facet_wrap(~ round) \n\n\n\n\n\ndens &lt;- eqtlgen_data |&gt; \n  filter(abs(tss_distance) &lt;= 300000) |&gt; \n  pull(tss_distance) |&gt; \n  density(bw = \"SJ\")\n  \ndens_data &lt;- tibble(x = dens$x, y = dens$y)\n\nsaveRDS(dens_data, here::here(\"output\", \"data\", \"density.rds\"))\n\n\nlog10_dens &lt;- eqtlgen_data |&gt; \n  filter(log10_abs_tss_distance &lt;= log10(300000)) |&gt; \n  filter(log10_abs_tss_distance &gt; 1) |&gt; \n  pull(log10_abs_tss_distance) |&gt; \n  density(bw = \"SJ\")\n\n\nall_studies_data &lt;- bind_rows(\n gtex_data |&gt;\n    mutate(study = \"GTX v8\"),\n  eqtlgen_data |&gt;\n    mutate(study = \"eQTLGen\"),\n  eqtl_catalogue_data |&gt;\n    mutate(study = \"eQTL Catalogue\"),\n  onek1k_data |&gt; \n    filter(round == 1) |&gt;\n    mutate(study = \"OneK1K\")\n)\n\n\nall_studies_data |&gt; \n  filter(abs(tss_distance) &lt;= 100000) |&gt; \n  mutate(kb = tss_distance / 1000) |&gt; \n  ggplot(aes(kb)) + \n  geom_density(bw = \"SJ\") + \n  facet_wrap(~ study, scales = \"free_y\") + \n  theme_jp() + \n  labs(\n    y = \"\",\n    x = \"Distance to TSS (kb)\"\n  ) + \n  theme(\n    axis.text = element_text(size = 12), \n    axis.title = element_text(size = 16),\n    strip.text = element_text(size = 20, hjust = 0)\n  )"
  }
]